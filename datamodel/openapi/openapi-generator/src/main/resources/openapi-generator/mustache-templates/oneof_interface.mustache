/**
 * {{description}}{{^description}}{{classname}}{{/description}}{{#isDeprecated}}
 * @deprecated{{/isDeprecated}}
 */{{#isDeprecated}}
@Deprecated{{/isDeprecated}}{{^isReleased}}
@Beta{{/isReleased}}
{{^model.vendorExtensions.x-monads}}
{{>additionalOneOfTypeAnnotations}}{{>typeInfoAnnotation}}{{>xmlAnnotation}}
{{/model.vendorExtensions.x-monads}}
public interface {{classname}} {{#vendorExtensions.x-implements}}{{#-first}}extends {{{.}}}{{/-first}}{{^-first}}, {{{.}}}{{/-first}}{{/vendorExtensions.x-implements}} {
{{#discriminator}}
    Object {{propertyGetter}}();
{{/discriminator}}
{{#model.vendorExtensions.x-monads.single}}
    /**
     * Helper class to create a {{.}} that implements {@link {{classname}}}.
     */
    record Inner{{.}}(@com.fasterxml.jackson.annotation.JsonValue @Nonnull {{.}} value) implements {{classname}} {}

    /**
     * Creator to enable deserialization of a {{.}}.
     *
     * @param val the value to use
     * @return a new instance of {@link Inner{{.}}}.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    @Nonnull
    static Inner{{.}} create( @Nonnull final {{.}} val) { return new Inner{{.}}(val); }

{{/model.vendorExtensions.x-monads.single}}
{{#model.vendorExtensions.x-monads.multipleND}}
    /**
     * Helper class to create {@code {{{originalType}}} } that implements {@link {{classname}}}.
     */
    record {{wrapperType}}(@com.fasterxml.jackson.annotation.JsonValue @Nonnull {{{originalType}}} values) implements {{classname}} {}

    /**
     * Creator to enable deserialization of {@code {{{originalType}}} }.
     *
     * @param val the value to use
     * @return a new instance of {@link {{wrapperType}}}.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    @Nonnull
    static {{wrapperType}} create{{wrapperType}}( @Nonnull final {{{originalType}}} val) { return new {{wrapperType}}(val); }

{{/model.vendorExtensions.x-monads.multipleND}}
}

/*
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Soda Store API
 * API for managing sodas in a soda store
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.builder.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.services.builder.model.Mate;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * ClubMate
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "vendor", visible = true)
@JsonSubTypes({
})
// CHECKSTYLE:OFF
public class ClubMate extends Mate 
// CHECKSTYLE:ON
{
  @JsonProperty("isWinterEdition")
  private String isWinterEdition;

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();
  /**
   * Default constructor for ClubMate.
   */
  private ClubMate() { super(); }

  /**
   * Set the isWinterEdition of this {@link ClubMate} instance and return the same instance.
   *
   * @param isWinterEdition  The isWinterEdition of this {@link ClubMate}
   * @return The same instance of this {@link ClubMate} class
   */
  @Nonnull public ClubMate isWinterEdition( @Nullable final String isWinterEdition) {
    this.isWinterEdition = isWinterEdition;
    return this;
  }

  /**
   * Get isWinterEdition
   * @return isWinterEdition  The isWinterEdition of this {@link ClubMate} instance.
   */
  @Nonnull
  public String getIsWinterEdition() {
    return isWinterEdition;
  }

  /**
   * Set the isWinterEdition of this {@link ClubMate} instance.
   *
   * @param isWinterEdition  The isWinterEdition of this {@link ClubMate}
   */
  public void setIsWinterEdition( @Nullable final String isWinterEdition) {
    this.isWinterEdition = isWinterEdition;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link ClubMate}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link ClubMate} instance.
   * @deprecated Use {@link #toMap()} instead.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField( @Nonnull final String name ) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("ClubMate has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link ClubMate} instance including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap()
  {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if( isWinterEdition != null ) declaredFields.put("isWinterEdition", isWinterEdition);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link ClubMate} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public ClubMate vendor(String vendor) {
    this.setVendor(vendor);
    return this;
  }

  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final ClubMate clubMate = (ClubMate) o;
    return Objects.equals(this.cloudSdkCustomFields, clubMate.cloudSdkCustomFields) &&
        Objects.equals(this.isWinterEdition, clubMate.isWinterEdition) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isWinterEdition, cloudSdkCustomFields, super.hashCode());
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class ClubMate {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    isWinterEdition: ").append(toIndentedString(isWinterEdition)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
    /**
    * Create a type-safe, fluent-api builder object to construct a new {@link ClubMate} instance with all required arguments.
    */
    public static Builder builder() {
        return (vendor) -> () -> new ClubMate().vendor(vendor);
    }
    /**
    * Builder helper class.
    */
    public interface Builder {
        /**
        * Set the vendor of this {@link ClubMate} instance.
        *
        * @param vendor  The vendor of this {@link ClubMate}
        * @return The ClubMate instance.
        */
        Builder1 vendor( @Nonnull final String vendor);
    }
    /**
    * Builder helper class.
    */
    public interface Builder1 {
        /**
        * Finalize the builder for new {@link ClubMate} instance.
        *
        * @return The ClubMate instance.
        */
        ClubMate build();
    }

}


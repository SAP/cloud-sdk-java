/*
 * Copyright (c) 2024 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models. 
 *
 * The version of the OpenAPI document: 2.26.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.ai.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * ExtensionsDatasetAllOfLimits
 */

// CHECKSTYLE:OFF
public class ExtensionsDatasetAllOfLimits 
// CHECKSTYLE:ON
{
  @JsonProperty("maxUploadFileSize")
  private Integer maxUploadFileSize = 104857600;

  @JsonProperty("maxFilesPerDataset")
  private Integer maxFilesPerDataset = -1;

  @JsonProperty("acceptedContentTypes")
  private List<String> acceptedContentTypes;

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the maxUploadFileSize of this {@link ExtensionsDatasetAllOfLimits} instance and return the same instance.
   *
   * @param maxUploadFileSize  Max size (in bytes) of a single uploaded file allowed by this runtime per resource group.
   * @return The same instance of this {@link ExtensionsDatasetAllOfLimits} class
   */
   @Nonnull public ExtensionsDatasetAllOfLimits maxUploadFileSize(@Nonnull final Integer maxUploadFileSize) {
    this.maxUploadFileSize = maxUploadFileSize;
    return this;
  }

   /**
   * Max size (in bytes) of a single uploaded file allowed by this runtime per resource group.
   * @return maxUploadFileSize  The maxUploadFileSize of this {@link ExtensionsDatasetAllOfLimits} instance.
  **/
  @Nonnull public Integer getMaxUploadFileSize() {
    return maxUploadFileSize;
  }

  /**
  * Set the maxUploadFileSize of this {@link ExtensionsDatasetAllOfLimits} instance.
  *
  * @param maxUploadFileSize  Max size (in bytes) of a single uploaded file allowed by this runtime per resource group.
  */
  public void setMaxUploadFileSize( @Nonnull final Integer maxUploadFileSize) {
    this.maxUploadFileSize = maxUploadFileSize;
  }

   /**
   * Set the maxFilesPerDataset of this {@link ExtensionsDatasetAllOfLimits} instance and return the same instance.
   *
   * @param maxFilesPerDataset  Max number of files per dataset. &lt;0 means unlimited.
   * @return The same instance of this {@link ExtensionsDatasetAllOfLimits} class
   */
   @Nonnull public ExtensionsDatasetAllOfLimits maxFilesPerDataset(@Nonnull final Integer maxFilesPerDataset) {
    this.maxFilesPerDataset = maxFilesPerDataset;
    return this;
  }

   /**
   * Max number of files per dataset. &lt;0 means unlimited.
   * @return maxFilesPerDataset  The maxFilesPerDataset of this {@link ExtensionsDatasetAllOfLimits} instance.
  **/
  @Nonnull public Integer getMaxFilesPerDataset() {
    return maxFilesPerDataset;
  }

  /**
  * Set the maxFilesPerDataset of this {@link ExtensionsDatasetAllOfLimits} instance.
  *
  * @param maxFilesPerDataset  Max number of files per dataset. &lt;0 means unlimited.
  */
  public void setMaxFilesPerDataset( @Nonnull final Integer maxFilesPerDataset) {
    this.maxFilesPerDataset = maxFilesPerDataset;
  }

   /**
   * Set the acceptedContentTypes of this {@link ExtensionsDatasetAllOfLimits} instance and return the same instance.
   *
   * @param acceptedContentTypes  The acceptedContentTypes of this {@link ExtensionsDatasetAllOfLimits}
   * @return The same instance of this {@link ExtensionsDatasetAllOfLimits} class
   */
   @Nonnull public ExtensionsDatasetAllOfLimits acceptedContentTypes(@Nonnull final List<String> acceptedContentTypes) {
    this.acceptedContentTypes = acceptedContentTypes;
    return this;
  }
  /**
  * Add one AcceptedContentTypes instance to this {@link ExtensionsDatasetAllOfLimits}.
  * @param acceptedContentTypesItem The AcceptedContentTypes that should be added
  * @return The same instance of type {@link ExtensionsDatasetAllOfLimits}
  */
  @Nonnull public ExtensionsDatasetAllOfLimits addAcceptedContentTypesItem( @Nonnull final String acceptedContentTypesItem) {
    if (this.acceptedContentTypes == null) {
      this.acceptedContentTypes = new ArrayList<>();
    }
    this.acceptedContentTypes.add(acceptedContentTypesItem);
    return this;
  }

   /**
   * Get acceptedContentTypes
   * @return acceptedContentTypes  The acceptedContentTypes of this {@link ExtensionsDatasetAllOfLimits} instance.
  **/
  @Nonnull public List<String> getAcceptedContentTypes() {
    return acceptedContentTypes;
  }

  /**
  * Set the acceptedContentTypes of this {@link ExtensionsDatasetAllOfLimits} instance.
  *
  * @param acceptedContentTypes  The acceptedContentTypes of this {@link ExtensionsDatasetAllOfLimits}
  */
  public void setAcceptedContentTypes( @Nonnull final List<String> acceptedContentTypes) {
    this.acceptedContentTypes = acceptedContentTypes;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link ExtensionsDatasetAllOfLimits}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link ExtensionsDatasetAllOfLimits} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("ExtensionsDatasetAllOfLimits has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link ExtensionsDatasetAllOfLimits} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final ExtensionsDatasetAllOfLimits extensionsDatasetAllOfLimits = (ExtensionsDatasetAllOfLimits) o;
    return Objects.equals(this.cloudSdkCustomFields, extensionsDatasetAllOfLimits.cloudSdkCustomFields) &&
        Objects.equals(this.maxUploadFileSize, extensionsDatasetAllOfLimits.maxUploadFileSize) &&
        Objects.equals(this.maxFilesPerDataset, extensionsDatasetAllOfLimits.maxFilesPerDataset) &&
        Objects.equals(this.acceptedContentTypes, extensionsDatasetAllOfLimits.acceptedContentTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxUploadFileSize, maxFilesPerDataset, acceptedContentTypes, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class ExtensionsDatasetAllOfLimits {\n");
    sb.append("    maxUploadFileSize: ").append(toIndentedString(maxUploadFileSize)).append("\n");
    sb.append("    maxFilesPerDataset: ").append(toIndentedString(maxFilesPerDataset)).append("\n");
    sb.append("    acceptedContentTypes: ").append(toIndentedString(acceptedContentTypes)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


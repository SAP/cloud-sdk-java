/*
 * Copyright (c) 2024 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models. 
 *
 * The version of the OpenAPI document: 2.26.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.ai.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * Schedule
 */

// CHECKSTYLE:OFF
public class Schedule 
// CHECKSTYLE:ON
{
  @JsonProperty("start")
  private OffsetDateTime start;

  @JsonProperty("end")
  private OffsetDateTime end;

  @JsonProperty("cron")
  private String cron;

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the start of this {@link Schedule} instance and return the same instance.
   *
   * @param start  Timestamp, defining when the executions should start running periodically, defaults to now
   * @return The same instance of this {@link Schedule} class
   */
   @Nonnull public Schedule start(@Nonnull final OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Timestamp, defining when the executions should start running periodically, defaults to now
   * @return start  The start of this {@link Schedule} instance.
  **/
  @Nonnull public OffsetDateTime getStart() {
    return start;
  }

  /**
  * Set the start of this {@link Schedule} instance.
  *
  * @param start  Timestamp, defining when the executions should start running periodically, defaults to now
  */
  public void setStart( @Nonnull final OffsetDateTime start) {
    this.start = start;
  }

   /**
   * Set the end of this {@link Schedule} instance and return the same instance.
   *
   * @param end  Timestamp, defining when the executions should stop running
   * @return The same instance of this {@link Schedule} class
   */
   @Nonnull public Schedule end(@Nonnull final OffsetDateTime end) {
    this.end = end;
    return this;
  }

   /**
   * Timestamp, defining when the executions should stop running
   * @return end  The end of this {@link Schedule} instance.
  **/
  @Nonnull public OffsetDateTime getEnd() {
    return end;
  }

  /**
  * Set the end of this {@link Schedule} instance.
  *
  * @param end  Timestamp, defining when the executions should stop running
  */
  public void setEnd( @Nonnull final OffsetDateTime end) {
    this.end = end;
  }

   /**
   * Set the cron of this {@link Schedule} instance and return the same instance.
   *
   * @param cron  Cron defining the schedule to run the executions.
   * @return The same instance of this {@link Schedule} class
   */
   @Nonnull public Schedule cron(@Nonnull final String cron) {
    this.cron = cron;
    return this;
  }

   /**
   * Cron defining the schedule to run the executions.
   * @return cron  The cron of this {@link Schedule} instance.
  **/
  @Nonnull public String getCron() {
    return cron;
  }

  /**
  * Set the cron of this {@link Schedule} instance.
  *
  * @param cron  Cron defining the schedule to run the executions.
  */
  public void setCron( @Nonnull final String cron) {
    this.cron = cron;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link Schedule}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link Schedule} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("Schedule has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link Schedule} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final Schedule schedule = (Schedule) o;
    return Objects.equals(this.cloudSdkCustomFields, schedule.cloudSdkCustomFields) &&
        Objects.equals(this.start, schedule.start) &&
        Objects.equals(this.end, schedule.end) &&
        Objects.equals(this.cron, schedule.cron);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, end, cron, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class Schedule {\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    cron: ").append(toIndentedString(cron)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


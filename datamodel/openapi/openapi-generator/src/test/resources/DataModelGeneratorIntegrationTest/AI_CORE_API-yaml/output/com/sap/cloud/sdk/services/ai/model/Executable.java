/*
 * Copyright (c) 2024 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models. 
 *
 * The version of the OpenAPI document: 2.26.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.ai.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.services.ai.model.ExecutableArtifact;
import com.sap.cloud.sdk.services.ai.model.ExecutableId;
import com.sap.cloud.sdk.services.ai.model.ExecutableParameter;
import com.sap.cloud.sdk.services.ai.model.Label;
import com.sap.cloud.sdk.services.ai.model.ScenarioId;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * An ML executable consists of a set of ML tasks, flows between tasks, dependencies between tasks, models (or model versions?). 
 */

// CHECKSTYLE:OFF
public class Executable 
// CHECKSTYLE:ON
{
  @JsonProperty("labels")
  private List<Label> labels;

  @JsonProperty("name")
  private String name;

  @JsonProperty("description")
  private String description;

  @JsonProperty("id")
  private ExecutableId id;

  @JsonProperty("scenarioId")
  private ScenarioId scenarioId;

  @JsonProperty("versionId")
  private String versionId;

  @JsonProperty("parameters")
  private List<ExecutableParameter> parameters;

  @JsonProperty("inputArtifacts")
  private List<ExecutableArtifact> inputArtifacts;

  @JsonProperty("outputArtifacts")
  private List<ExecutableArtifact> outputArtifacts;

  @JsonProperty("deployable")
  private Boolean deployable;

  @JsonProperty("createdAt")
  private OffsetDateTime createdAt;

  @JsonProperty("modifiedAt")
  private OffsetDateTime modifiedAt;

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the labels of this {@link Executable} instance and return the same instance.
   *
   * @param labels  Arbitrary labels as meta information
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable labels(@Nonnull final List<Label> labels) {
    this.labels = labels;
    return this;
  }
  /**
  * Add one Labels instance to this {@link Executable}.
  * @param labelsItem The Labels that should be added
  * @return The same instance of type {@link Executable}
  */
  @Nonnull public Executable addLabelsItem( @Nonnull final Label labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Arbitrary labels as meta information
   * @return labels  The labels of this {@link Executable} instance.
  **/
  @Nonnull public List<Label> getLabels() {
    return labels;
  }

  /**
  * Set the labels of this {@link Executable} instance.
  *
  * @param labels  Arbitrary labels as meta information
  */
  public void setLabels( @Nonnull final List<Label> labels) {
    this.labels = labels;
  }

   /**
   * Set the name of this {@link Executable} instance and return the same instance.
   *
   * @param name  Name of the executable
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable name(@Nonnull final String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the executable
   * @return name  The name of this {@link Executable} instance.
  **/
  @Nonnull public String getName() {
    return name;
  }

  /**
  * Set the name of this {@link Executable} instance.
  *
  * @param name  Name of the executable
  */
  public void setName( @Nonnull final String name) {
    this.name = name;
  }

   /**
   * Set the description of this {@link Executable} instance and return the same instance.
   *
   * @param description  Description of the executable
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable description(@Nonnull final String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the executable
   * @return description  The description of this {@link Executable} instance.
  **/
  @Nonnull public String getDescription() {
    return description;
  }

  /**
  * Set the description of this {@link Executable} instance.
  *
  * @param description  Description of the executable
  */
  public void setDescription( @Nonnull final String description) {
    this.description = description;
  }

   /**
   * Set the id of this {@link Executable} instance and return the same instance.
   *
   * @param id  The id of this {@link Executable}
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable id(@Nonnull final ExecutableId id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id  The id of this {@link Executable} instance.
  **/
  @Nonnull public ExecutableId getId() {
    return id;
  }

  /**
  * Set the id of this {@link Executable} instance.
  *
  * @param id  The id of this {@link Executable}
  */
  public void setId( @Nonnull final ExecutableId id) {
    this.id = id;
  }

   /**
   * Set the scenarioId of this {@link Executable} instance and return the same instance.
   *
   * @param scenarioId  The scenarioId of this {@link Executable}
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable scenarioId(@Nonnull final ScenarioId scenarioId) {
    this.scenarioId = scenarioId;
    return this;
  }

   /**
   * Get scenarioId
   * @return scenarioId  The scenarioId of this {@link Executable} instance.
  **/
  @Nonnull public ScenarioId getScenarioId() {
    return scenarioId;
  }

  /**
  * Set the scenarioId of this {@link Executable} instance.
  *
  * @param scenarioId  The scenarioId of this {@link Executable}
  */
  public void setScenarioId( @Nonnull final ScenarioId scenarioId) {
    this.scenarioId = scenarioId;
  }

   /**
   * Set the versionId of this {@link Executable} instance and return the same instance.
   *
   * @param versionId  Version ID
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable versionId(@Nonnull final String versionId) {
    this.versionId = versionId;
    return this;
  }

   /**
   * Version ID
   * @return versionId  The versionId of this {@link Executable} instance.
  **/
  @Nonnull public String getVersionId() {
    return versionId;
  }

  /**
  * Set the versionId of this {@link Executable} instance.
  *
  * @param versionId  Version ID
  */
  public void setVersionId( @Nonnull final String versionId) {
    this.versionId = versionId;
  }

   /**
   * Set the parameters of this {@link Executable} instance and return the same instance.
   *
   * @param parameters  Executable parameters
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable parameters(@Nonnull final List<ExecutableParameter> parameters) {
    this.parameters = parameters;
    return this;
  }
  /**
  * Add one Parameters instance to this {@link Executable}.
  * @param parametersItem The Parameters that should be added
  * @return The same instance of type {@link Executable}
  */
  @Nonnull public Executable addParametersItem( @Nonnull final ExecutableParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Executable parameters
   * @return parameters  The parameters of this {@link Executable} instance.
  **/
  @Nonnull public List<ExecutableParameter> getParameters() {
    return parameters;
  }

  /**
  * Set the parameters of this {@link Executable} instance.
  *
  * @param parameters  Executable parameters
  */
  public void setParameters( @Nonnull final List<ExecutableParameter> parameters) {
    this.parameters = parameters;
  }

   /**
   * Set the inputArtifacts of this {@link Executable} instance and return the same instance.
   *
   * @param inputArtifacts  Executable parameters
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable inputArtifacts(@Nonnull final List<ExecutableArtifact> inputArtifacts) {
    this.inputArtifacts = inputArtifacts;
    return this;
  }
  /**
  * Add one InputArtifacts instance to this {@link Executable}.
  * @param inputArtifactsItem The InputArtifacts that should be added
  * @return The same instance of type {@link Executable}
  */
  @Nonnull public Executable addInputArtifactsItem( @Nonnull final ExecutableArtifact inputArtifactsItem) {
    if (this.inputArtifacts == null) {
      this.inputArtifacts = new ArrayList<>();
    }
    this.inputArtifacts.add(inputArtifactsItem);
    return this;
  }

   /**
   * Executable parameters
   * @return inputArtifacts  The inputArtifacts of this {@link Executable} instance.
  **/
  @Nonnull public List<ExecutableArtifact> getInputArtifacts() {
    return inputArtifacts;
  }

  /**
  * Set the inputArtifacts of this {@link Executable} instance.
  *
  * @param inputArtifacts  Executable parameters
  */
  public void setInputArtifacts( @Nonnull final List<ExecutableArtifact> inputArtifacts) {
    this.inputArtifacts = inputArtifacts;
  }

   /**
   * Set the outputArtifacts of this {@link Executable} instance and return the same instance.
   *
   * @param outputArtifacts  Executable parameters
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable outputArtifacts(@Nonnull final List<ExecutableArtifact> outputArtifacts) {
    this.outputArtifacts = outputArtifacts;
    return this;
  }
  /**
  * Add one OutputArtifacts instance to this {@link Executable}.
  * @param outputArtifactsItem The OutputArtifacts that should be added
  * @return The same instance of type {@link Executable}
  */
  @Nonnull public Executable addOutputArtifactsItem( @Nonnull final ExecutableArtifact outputArtifactsItem) {
    if (this.outputArtifacts == null) {
      this.outputArtifacts = new ArrayList<>();
    }
    this.outputArtifacts.add(outputArtifactsItem);
    return this;
  }

   /**
   * Executable parameters
   * @return outputArtifacts  The outputArtifacts of this {@link Executable} instance.
  **/
  @Nonnull public List<ExecutableArtifact> getOutputArtifacts() {
    return outputArtifacts;
  }

  /**
  * Set the outputArtifacts of this {@link Executable} instance.
  *
  * @param outputArtifacts  Executable parameters
  */
  public void setOutputArtifacts( @Nonnull final List<ExecutableArtifact> outputArtifacts) {
    this.outputArtifacts = outputArtifacts;
  }

   /**
   * Set the deployable of this {@link Executable} instance and return the same instance.
   *
   * @param deployable  Whether this executable is deployable
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable deployable(@Nonnull final Boolean deployable) {
    this.deployable = deployable;
    return this;
  }

   /**
   * Whether this executable is deployable
   * @return deployable  The deployable of this {@link Executable} instance.
  **/
  @Nonnull public Boolean isDeployable() {
    return deployable;
  }

  /**
  * Set the deployable of this {@link Executable} instance.
  *
  * @param deployable  Whether this executable is deployable
  */
  public void setDeployable( @Nonnull final Boolean deployable) {
    this.deployable = deployable;
  }

   /**
   * Set the createdAt of this {@link Executable} instance and return the same instance.
   *
   * @param createdAt  Timestamp of resource creation
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable createdAt(@Nonnull final OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp of resource creation
   * @return createdAt  The createdAt of this {@link Executable} instance.
  **/
  @Nonnull public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  /**
  * Set the createdAt of this {@link Executable} instance.
  *
  * @param createdAt  Timestamp of resource creation
  */
  public void setCreatedAt( @Nonnull final OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

   /**
   * Set the modifiedAt of this {@link Executable} instance and return the same instance.
   *
   * @param modifiedAt  Timestamp of latest resource modification
   * @return The same instance of this {@link Executable} class
   */
   @Nonnull public Executable modifiedAt(@Nonnull final OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Timestamp of latest resource modification
   * @return modifiedAt  The modifiedAt of this {@link Executable} instance.
  **/
  @Nonnull public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }

  /**
  * Set the modifiedAt of this {@link Executable} instance.
  *
  * @param modifiedAt  Timestamp of latest resource modification
  */
  public void setModifiedAt( @Nonnull final OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link Executable}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link Executable} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("Executable has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link Executable} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final Executable executable = (Executable) o;
    return Objects.equals(this.cloudSdkCustomFields, executable.cloudSdkCustomFields) &&
        Objects.equals(this.labels, executable.labels) &&
        Objects.equals(this.name, executable.name) &&
        Objects.equals(this.description, executable.description) &&
        Objects.equals(this.id, executable.id) &&
        Objects.equals(this.scenarioId, executable.scenarioId) &&
        Objects.equals(this.versionId, executable.versionId) &&
        Objects.equals(this.parameters, executable.parameters) &&
        Objects.equals(this.inputArtifacts, executable.inputArtifacts) &&
        Objects.equals(this.outputArtifacts, executable.outputArtifacts) &&
        Objects.equals(this.deployable, executable.deployable) &&
        Objects.equals(this.createdAt, executable.createdAt) &&
        Objects.equals(this.modifiedAt, executable.modifiedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(labels, name, description, id, scenarioId, versionId, parameters, inputArtifacts, outputArtifacts, deployable, createdAt, modifiedAt, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class Executable {\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scenarioId: ").append(toIndentedString(scenarioId)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    inputArtifacts: ").append(toIndentedString(inputArtifacts)).append("\n");
    sb.append("    outputArtifacts: ").append(toIndentedString(outputArtifacts)).append("\n");
    sb.append("    deployable: ").append(toIndentedString(deployable)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


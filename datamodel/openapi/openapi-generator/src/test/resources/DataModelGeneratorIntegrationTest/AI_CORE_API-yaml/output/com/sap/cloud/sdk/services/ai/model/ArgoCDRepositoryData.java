/*
 * Copyright (c) 2024 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * AI Core
 * Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models. 
 *
 * The version of the OpenAPI document: 2.26.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.ai.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * ArgoCDRepositoryData
 */

// CHECKSTYLE:OFF
public class ArgoCDRepositoryData 
// CHECKSTYLE:ON
{
  @JsonProperty("name")
  private String name;

  @JsonProperty("url")
  private String url;

  @JsonProperty("username")
  private String username;

  @JsonProperty("password")
  private String password;

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the name of this {@link ArgoCDRepositoryData} instance and return the same instance.
   *
   * @param name  Name of the repository
   * @return The same instance of this {@link ArgoCDRepositoryData} class
   */
   @Nonnull public ArgoCDRepositoryData name(@Nonnull final String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the repository
   * @return name  The name of this {@link ArgoCDRepositoryData} instance.
  **/
  @Nonnull public String getName() {
    return name;
  }

  /**
  * Set the name of this {@link ArgoCDRepositoryData} instance.
  *
  * @param name  Name of the repository
  */
  public void setName( @Nonnull final String name) {
    this.name = name;
  }

   /**
   * Set the url of this {@link ArgoCDRepositoryData} instance and return the same instance.
   *
   * @param url  URL of the repository to synchronise
   * @return The same instance of this {@link ArgoCDRepositoryData} class
   */
   @Nonnull public ArgoCDRepositoryData url(@Nonnull final String url) {
    this.url = url;
    return this;
  }

   /**
   * URL of the repository to synchronise
   * @return url  The url of this {@link ArgoCDRepositoryData} instance.
  **/
  @Nonnull public String getUrl() {
    return url;
  }

  /**
  * Set the url of this {@link ArgoCDRepositoryData} instance.
  *
  * @param url  URL of the repository to synchronise
  */
  public void setUrl( @Nonnull final String url) {
    this.url = url;
  }

   /**
   * Set the username of this {@link ArgoCDRepositoryData} instance and return the same instance.
   *
   * @param username  Username for read-access to the repository
   * @return The same instance of this {@link ArgoCDRepositoryData} class
   */
   @Nonnull public ArgoCDRepositoryData username(@Nonnull final String username) {
    this.username = username;
    return this;
  }

   /**
   * Username for read-access to the repository
   * @return username  The username of this {@link ArgoCDRepositoryData} instance.
  **/
  @Nonnull public String getUsername() {
    return username;
  }

  /**
  * Set the username of this {@link ArgoCDRepositoryData} instance.
  *
  * @param username  Username for read-access to the repository
  */
  public void setUsername( @Nonnull final String username) {
    this.username = username;
  }

   /**
   * Set the password of this {@link ArgoCDRepositoryData} instance and return the same instance.
   *
   * @param password  Password for read-access to the repository
   * @return The same instance of this {@link ArgoCDRepositoryData} class
   */
   @Nonnull public ArgoCDRepositoryData password(@Nonnull final String password) {
    this.password = password;
    return this;
  }

   /**
   * Password for read-access to the repository
   * @return password  The password of this {@link ArgoCDRepositoryData} instance.
  **/
  @Nonnull public String getPassword() {
    return password;
  }

  /**
  * Set the password of this {@link ArgoCDRepositoryData} instance.
  *
  * @param password  Password for read-access to the repository
  */
  public void setPassword( @Nonnull final String password) {
    this.password = password;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link ArgoCDRepositoryData}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link ArgoCDRepositoryData} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("ArgoCDRepositoryData has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link ArgoCDRepositoryData} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final ArgoCDRepositoryData argoCDRepositoryData = (ArgoCDRepositoryData) o;
    return Objects.equals(this.cloudSdkCustomFields, argoCDRepositoryData.cloudSdkCustomFields) &&
        Objects.equals(this.name, argoCDRepositoryData.name) &&
        Objects.equals(this.url, argoCDRepositoryData.url) &&
        Objects.equals(this.username, argoCDRepositoryData.username) &&
        Objects.equals(this.password, argoCDRepositoryData.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, url, username, password, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class ArgoCDRepositoryData {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


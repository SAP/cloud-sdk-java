/*
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Azure OpenAI Service API
 * Azure OpenAI APIs for completions and search
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.openai.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.services.openai.model.AzureSearchChatExtensionParametersAuthentication;
import com.sap.cloud.sdk.services.openai.model.AzureSearchChatExtensionParametersEmbeddingDependency;
import com.sap.cloud.sdk.services.openai.model.AzureSearchIndexFieldMappingOptions;
import com.sap.cloud.sdk.services.openai.model.AzureSearchQueryType;
import java.net.URI;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * Parameters for Azure Search when used as an Azure OpenAI chat extension.
 */
// CHECKSTYLE:OFF
public class AzureSearchChatExtensionParameters 
// CHECKSTYLE:ON
{
  @JsonProperty("authentication")
  private AzureSearchChatExtensionParametersAuthentication authentication;

  @JsonProperty("top_n_documents")
  private Integer topNDocuments;

  @JsonProperty("in_scope")
  private Boolean inScope;

  @JsonProperty("strictness")
  private Integer strictness;

  @JsonProperty("role_information")
  private String roleInformation;

  @JsonProperty("endpoint")
  private URI endpoint;

  @JsonProperty("index_name")
  private String indexName;

  @JsonProperty("fields_mapping")
  private AzureSearchIndexFieldMappingOptions fieldsMapping;

  @JsonProperty("query_type")
  private AzureSearchQueryType queryType;

  @JsonProperty("semantic_configuration")
  private String semanticConfiguration;

  @JsonProperty("filter")
  private String filter;

  @JsonProperty("embedding_dependency")
  private AzureSearchChatExtensionParametersEmbeddingDependency embeddingDependency;

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /**
   * Set the authentication of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param authentication  The authentication of this {@link AzureSearchChatExtensionParameters}
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters authentication( @Nonnull final AzureSearchChatExtensionParametersAuthentication authentication) {
    this.authentication = authentication;
    return this;
  }

  /**
   * Get authentication
   * @return authentication  The authentication of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public AzureSearchChatExtensionParametersAuthentication getAuthentication() {
    return authentication;
  }

  /**
   * Set the authentication of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param authentication  The authentication of this {@link AzureSearchChatExtensionParameters}
   */
  public void setAuthentication( @Nonnull final AzureSearchChatExtensionParametersAuthentication authentication) {
    this.authentication = authentication;
  }

  /**
   * Set the topNDocuments of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param topNDocuments  The configured top number of documents to feature for the configured query.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters topNDocuments( @Nullable final Integer topNDocuments) {
    this.topNDocuments = topNDocuments;
    return this;
  }

  /**
   * The configured top number of documents to feature for the configured query.
   * @return topNDocuments  The topNDocuments of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public Integer getTopNDocuments() {
    return topNDocuments;
  }

  /**
   * Set the topNDocuments of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param topNDocuments  The configured top number of documents to feature for the configured query.
   */
  public void setTopNDocuments( @Nullable final Integer topNDocuments) {
    this.topNDocuments = topNDocuments;
  }

  /**
   * Set the inScope of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param inScope  Whether queries should be restricted to use of indexed data.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters inScope( @Nullable final Boolean inScope) {
    this.inScope = inScope;
    return this;
  }

  /**
   * Whether queries should be restricted to use of indexed data.
   * @return inScope  The inScope of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public Boolean isInScope() {
    return inScope;
  }

  /**
   * Set the inScope of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param inScope  Whether queries should be restricted to use of indexed data.
   */
  public void setInScope( @Nullable final Boolean inScope) {
    this.inScope = inScope;
  }

  /**
   * Set the strictness of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param strictness  The configured strictness of the search relevance filtering. The higher of strictness, the higher of the precision but lower recall of the answer.
   * Minimum: 1
   * Maximum: 5
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters strictness( @Nullable final Integer strictness) {
    this.strictness = strictness;
    return this;
  }

  /**
   * The configured strictness of the search relevance filtering. The higher of strictness, the higher of the precision but lower recall of the answer.
   * minimum: 1
   * maximum: 5
   * @return strictness  The strictness of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public Integer getStrictness() {
    return strictness;
  }

  /**
   * Set the strictness of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param strictness  The configured strictness of the search relevance filtering. The higher of strictness, the higher of the precision but lower recall of the answer.
   * Minimum: 1
   * Maximum: 5
   */
  public void setStrictness( @Nullable final Integer strictness) {
    this.strictness = strictness;
  }

  /**
   * Set the roleInformation of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param roleInformation  Give the model instructions about how it should behave and any context it should reference when generating a response. You can describe the assistant&#39;s personality and tell it how to format responses. There&#39;s a 100 token limit for it, and it counts against the overall token limit.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters roleInformation( @Nullable final String roleInformation) {
    this.roleInformation = roleInformation;
    return this;
  }

  /**
   * Give the model instructions about how it should behave and any context it should reference when generating a response. You can describe the assistant&#39;s personality and tell it how to format responses. There&#39;s a 100 token limit for it, and it counts against the overall token limit.
   * @return roleInformation  The roleInformation of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public String getRoleInformation() {
    return roleInformation;
  }

  /**
   * Set the roleInformation of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param roleInformation  Give the model instructions about how it should behave and any context it should reference when generating a response. You can describe the assistant&#39;s personality and tell it how to format responses. There&#39;s a 100 token limit for it, and it counts against the overall token limit.
   */
  public void setRoleInformation( @Nullable final String roleInformation) {
    this.roleInformation = roleInformation;
  }

  /**
   * Set the endpoint of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param endpoint  The absolute endpoint path for the Azure Search resource to use.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters endpoint( @Nonnull final URI endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * The absolute endpoint path for the Azure Search resource to use.
   * @return endpoint  The endpoint of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public URI getEndpoint() {
    return endpoint;
  }

  /**
   * Set the endpoint of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param endpoint  The absolute endpoint path for the Azure Search resource to use.
   */
  public void setEndpoint( @Nonnull final URI endpoint) {
    this.endpoint = endpoint;
  }

  /**
   * Set the indexName of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param indexName  The name of the index to use as available in the referenced Azure Search resource.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters indexName( @Nonnull final String indexName) {
    this.indexName = indexName;
    return this;
  }

  /**
   * The name of the index to use as available in the referenced Azure Search resource.
   * @return indexName  The indexName of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public String getIndexName() {
    return indexName;
  }

  /**
   * Set the indexName of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param indexName  The name of the index to use as available in the referenced Azure Search resource.
   */
  public void setIndexName( @Nonnull final String indexName) {
    this.indexName = indexName;
  }

  /**
   * Set the fieldsMapping of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param fieldsMapping  The fieldsMapping of this {@link AzureSearchChatExtensionParameters}
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters fieldsMapping( @Nullable final AzureSearchIndexFieldMappingOptions fieldsMapping) {
    this.fieldsMapping = fieldsMapping;
    return this;
  }

  /**
   * Get fieldsMapping
   * @return fieldsMapping  The fieldsMapping of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public AzureSearchIndexFieldMappingOptions getFieldsMapping() {
    return fieldsMapping;
  }

  /**
   * Set the fieldsMapping of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param fieldsMapping  The fieldsMapping of this {@link AzureSearchChatExtensionParameters}
   */
  public void setFieldsMapping( @Nullable final AzureSearchIndexFieldMappingOptions fieldsMapping) {
    this.fieldsMapping = fieldsMapping;
  }

  /**
   * Set the queryType of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param queryType  The queryType of this {@link AzureSearchChatExtensionParameters}
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters queryType( @Nullable final AzureSearchQueryType queryType) {
    this.queryType = queryType;
    return this;
  }

  /**
   * Get queryType
   * @return queryType  The queryType of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public AzureSearchQueryType getQueryType() {
    return queryType;
  }

  /**
   * Set the queryType of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param queryType  The queryType of this {@link AzureSearchChatExtensionParameters}
   */
  public void setQueryType( @Nullable final AzureSearchQueryType queryType) {
    this.queryType = queryType;
  }

  /**
   * Set the semanticConfiguration of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param semanticConfiguration  The additional semantic configuration for the query.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters semanticConfiguration( @Nullable final String semanticConfiguration) {
    this.semanticConfiguration = semanticConfiguration;
    return this;
  }

  /**
   * The additional semantic configuration for the query.
   * @return semanticConfiguration  The semanticConfiguration of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public String getSemanticConfiguration() {
    return semanticConfiguration;
  }

  /**
   * Set the semanticConfiguration of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param semanticConfiguration  The additional semantic configuration for the query.
   */
  public void setSemanticConfiguration( @Nullable final String semanticConfiguration) {
    this.semanticConfiguration = semanticConfiguration;
  }

  /**
   * Set the filter of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param filter  Search filter.
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters filter( @Nullable final String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Search filter.
   * @return filter  The filter of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public String getFilter() {
    return filter;
  }

  /**
   * Set the filter of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param filter  Search filter.
   */
  public void setFilter( @Nullable final String filter) {
    this.filter = filter;
  }

  /**
   * Set the embeddingDependency of this {@link AzureSearchChatExtensionParameters} instance and return the same instance.
   *
   * @param embeddingDependency  The embeddingDependency of this {@link AzureSearchChatExtensionParameters}
   * @return The same instance of this {@link AzureSearchChatExtensionParameters} class
   */
  @Nonnull public AzureSearchChatExtensionParameters embeddingDependency( @Nullable final AzureSearchChatExtensionParametersEmbeddingDependency embeddingDependency) {
    this.embeddingDependency = embeddingDependency;
    return this;
  }

  /**
   * Get embeddingDependency
   * @return embeddingDependency  The embeddingDependency of this {@link AzureSearchChatExtensionParameters} instance.
   */
  @Nonnull
  public AzureSearchChatExtensionParametersEmbeddingDependency getEmbeddingDependency() {
    return embeddingDependency;
  }

  /**
   * Set the embeddingDependency of this {@link AzureSearchChatExtensionParameters} instance.
   *
   * @param embeddingDependency  The embeddingDependency of this {@link AzureSearchChatExtensionParameters}
   */
  public void setEmbeddingDependency( @Nullable final AzureSearchChatExtensionParametersEmbeddingDependency embeddingDependency) {
    this.embeddingDependency = embeddingDependency;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link AzureSearchChatExtensionParameters}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link AzureSearchChatExtensionParameters} instance.
   * @deprecated Use {@link #toMap()} instead.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField( @Nonnull final String name ) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("AzureSearchChatExtensionParameters has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link AzureSearchChatExtensionParameters} instance including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap()
  {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if( authentication != null ) declaredFields.put("authentication", authentication);
    if( topNDocuments != null ) declaredFields.put("topNDocuments", topNDocuments);
    if( inScope != null ) declaredFields.put("inScope", inScope);
    if( strictness != null ) declaredFields.put("strictness", strictness);
    if( roleInformation != null ) declaredFields.put("roleInformation", roleInformation);
    if( endpoint != null ) declaredFields.put("endpoint", endpoint);
    if( indexName != null ) declaredFields.put("indexName", indexName);
    if( fieldsMapping != null ) declaredFields.put("fieldsMapping", fieldsMapping);
    if( queryType != null ) declaredFields.put("queryType", queryType);
    if( semanticConfiguration != null ) declaredFields.put("semanticConfiguration", semanticConfiguration);
    if( filter != null ) declaredFields.put("filter", filter);
    if( embeddingDependency != null ) declaredFields.put("embeddingDependency", embeddingDependency);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link AzureSearchChatExtensionParameters} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final AzureSearchChatExtensionParameters azureSearchChatExtensionParameters = (AzureSearchChatExtensionParameters) o;
    return Objects.equals(this.cloudSdkCustomFields, azureSearchChatExtensionParameters.cloudSdkCustomFields) &&
        Objects.equals(this.authentication, azureSearchChatExtensionParameters.authentication) &&
        Objects.equals(this.topNDocuments, azureSearchChatExtensionParameters.topNDocuments) &&
        Objects.equals(this.inScope, azureSearchChatExtensionParameters.inScope) &&
        Objects.equals(this.strictness, azureSearchChatExtensionParameters.strictness) &&
        Objects.equals(this.roleInformation, azureSearchChatExtensionParameters.roleInformation) &&
        Objects.equals(this.endpoint, azureSearchChatExtensionParameters.endpoint) &&
        Objects.equals(this.indexName, azureSearchChatExtensionParameters.indexName) &&
        Objects.equals(this.fieldsMapping, azureSearchChatExtensionParameters.fieldsMapping) &&
        Objects.equals(this.queryType, azureSearchChatExtensionParameters.queryType) &&
        Objects.equals(this.semanticConfiguration, azureSearchChatExtensionParameters.semanticConfiguration) &&
        Objects.equals(this.filter, azureSearchChatExtensionParameters.filter) &&
        Objects.equals(this.embeddingDependency, azureSearchChatExtensionParameters.embeddingDependency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authentication, topNDocuments, inScope, strictness, roleInformation, endpoint, indexName, fieldsMapping, queryType, semanticConfiguration, filter, embeddingDependency, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class AzureSearchChatExtensionParameters {\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    topNDocuments: ").append(toIndentedString(topNDocuments)).append("\n");
    sb.append("    inScope: ").append(toIndentedString(inScope)).append("\n");
    sb.append("    strictness: ").append(toIndentedString(strictness)).append("\n");
    sb.append("    roleInformation: ").append(toIndentedString(roleInformation)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    fieldsMapping: ").append(toIndentedString(fieldsMapping)).append("\n");
    sb.append("    queryType: ").append(toIndentedString(queryType)).append("\n");
    sb.append("    semanticConfiguration: ").append(toIndentedString(semanticConfiguration)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    embeddingDependency: ").append(toIndentedString(embeddingDependency)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Azure OpenAI Service API
 * Azure OpenAI APIs for completions and search
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.openai.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.services.openai.model.AzureChatExtensionConfiguration;
import com.sap.cloud.sdk.services.openai.model.ChatCompletionFunctions;
import com.sap.cloud.sdk.services.openai.model.ChatCompletionRequestMessage;
import com.sap.cloud.sdk.services.openai.model.ChatCompletionStreamOptions;
import com.sap.cloud.sdk.services.openai.model.ChatCompletionTool;
import com.sap.cloud.sdk.services.openai.model.ChatCompletionToolChoiceOption;
import com.sap.cloud.sdk.services.openai.model.CreateChatCompletionRequestAllOfFunctionCall;
import com.sap.cloud.sdk.services.openai.model.CreateChatCompletionRequestAllOfResponseFormat;
import com.sap.cloud.sdk.services.openai.model.CreateChatCompletionRequestAllOfStop;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * CreateChatCompletionRequest
 */
// CHECKSTYLE:OFF
public class CreateChatCompletionRequest 
// CHECKSTYLE:ON
{
  @JsonProperty("temperature")
  private BigDecimal temperature = new BigDecimal("1");

  @JsonProperty("top_p")
  private BigDecimal topP = new BigDecimal("1");

  @JsonProperty("stream")
  private Boolean stream = false;

  @JsonProperty("stop")
  private CreateChatCompletionRequestAllOfStop stop = null;

  @JsonProperty("max_tokens")
  private Integer maxTokens;

  @JsonProperty("max_completion_tokens")
  private Integer maxCompletionTokens;

  @JsonProperty("presence_penalty")
  private BigDecimal presencePenalty = new BigDecimal("0");

  @JsonProperty("frequency_penalty")
  private BigDecimal frequencyPenalty = new BigDecimal("0");

  @JsonProperty("logit_bias")
  private Map<String, Integer> logitBias;

  @JsonProperty("user")
  private String user;

  @JsonProperty("messages")
  private List<ChatCompletionRequestMessage> messages = new ArrayList<>();

  @JsonProperty("data_sources")
  private List<AzureChatExtensionConfiguration> dataSources = new ArrayList<>();

  @JsonProperty("logprobs")
  private Boolean logprobs = false;

  @JsonProperty("top_logprobs")
  private Integer topLogprobs;

  @JsonProperty("n")
  private Integer n = 1;

  @JsonProperty("parallel_tool_calls")
  private Boolean parallelToolCalls = true;

  @JsonProperty("response_format")
  private CreateChatCompletionRequestAllOfResponseFormat responseFormat;

  @JsonProperty("seed")
  private Integer seed;

  @JsonProperty("stream_options")
  private ChatCompletionStreamOptions streamOptions;

  @JsonProperty("tools")
  private List<ChatCompletionTool> tools = new ArrayList<>();

  @JsonProperty("tool_choice")
  private ChatCompletionToolChoiceOption toolChoice;

  @JsonProperty("function_call")
  private CreateChatCompletionRequestAllOfFunctionCall functionCall;

  @JsonProperty("functions")
  private List<ChatCompletionFunctions> functions = new ArrayList<>();

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /**
   * Set the temperature of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param temperature  What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or &#x60;top_p&#x60; but not both. 
   * Minimum: 0
   * Maximum: 2
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest temperature( @Nullable final BigDecimal temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or &#x60;top_p&#x60; but not both. 
   * minimum: 0
   * maximum: 2
   * @return temperature  The temperature of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public BigDecimal getTemperature() {
    return temperature;
  }

  /**
   * Set the temperature of this {@link CreateChatCompletionRequest} instance.
   *
   * @param temperature  What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.  We generally recommend altering this or &#x60;top_p&#x60; but not both. 
   * Minimum: 0
   * Maximum: 2
   */
  public void setTemperature( @Nullable final BigDecimal temperature) {
    this.temperature = temperature;
  }

  /**
   * Set the topP of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param topP  An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or &#x60;temperature&#x60; but not both. 
   * Minimum: 0
   * Maximum: 1
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest topP( @Nullable final BigDecimal topP) {
    this.topP = topP;
    return this;
  }

  /**
   * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or &#x60;temperature&#x60; but not both. 
   * minimum: 0
   * maximum: 1
   * @return topP  The topP of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public BigDecimal getTopP() {
    return topP;
  }

  /**
   * Set the topP of this {@link CreateChatCompletionRequest} instance.
   *
   * @param topP  An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or &#x60;temperature&#x60; but not both. 
   * Minimum: 0
   * Maximum: 1
   */
  public void setTopP( @Nullable final BigDecimal topP) {
    this.topP = topP;
  }

  /**
   * Set the stream of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param stream  If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a &#x60;data: [DONE]&#x60; message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions). 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest stream( @Nullable final Boolean stream) {
    this.stream = stream;
    return this;
  }

  /**
   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a &#x60;data: [DONE]&#x60; message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions). 
   * @return stream  The stream of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Boolean isStream() {
    return stream;
  }

  /**
   * Set the stream of this {@link CreateChatCompletionRequest} instance.
   *
   * @param stream  If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a &#x60;data: [DONE]&#x60; message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions). 
   */
  public void setStream( @Nullable final Boolean stream) {
    this.stream = stream;
  }

  /**
   * Set the stop of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param stop  The stop of this {@link CreateChatCompletionRequest}
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest stop( @Nullable final CreateChatCompletionRequestAllOfStop stop) {
    this.stop = stop;
    return this;
  }

  /**
   * Get stop
   * @return stop  The stop of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public CreateChatCompletionRequestAllOfStop getStop() {
    return stop;
  }

  /**
   * Set the stop of this {@link CreateChatCompletionRequest} instance.
   *
   * @param stop  The stop of this {@link CreateChatCompletionRequest}
   */
  public void setStop( @Nullable final CreateChatCompletionRequestAllOfStop stop) {
    this.stop = stop;
  }

  /**
   * Set the maxTokens of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param maxTokens  The maximum number of [tokens](/tokenizer) that can be generated in the chat completion.  The total length of input tokens and generated tokens is limited by the model&#39;s context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest maxTokens( @Nullable final Integer maxTokens) {
    this.maxTokens = maxTokens;
    return this;
  }

  /**
   * The maximum number of [tokens](/tokenizer) that can be generated in the chat completion.  The total length of input tokens and generated tokens is limited by the model&#39;s context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. 
   * @return maxTokens  The maxTokens of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Integer getMaxTokens() {
    return maxTokens;
  }

  /**
   * Set the maxTokens of this {@link CreateChatCompletionRequest} instance.
   *
   * @param maxTokens  The maximum number of [tokens](/tokenizer) that can be generated in the chat completion.  The total length of input tokens and generated tokens is limited by the model&#39;s context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens. 
   */
  public void setMaxTokens( @Nullable final Integer maxTokens) {
    this.maxTokens = maxTokens;
  }

  /**
   * Set the maxCompletionTokens of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param maxCompletionTokens  An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens. 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest maxCompletionTokens( @Nullable final Integer maxCompletionTokens) {
    this.maxCompletionTokens = maxCompletionTokens;
    return this;
  }

  /**
   * An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens. 
   * @return maxCompletionTokens  The maxCompletionTokens of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Integer getMaxCompletionTokens() {
    return maxCompletionTokens;
  }

  /**
   * Set the maxCompletionTokens of this {@link CreateChatCompletionRequest} instance.
   *
   * @param maxCompletionTokens  An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens. 
   */
  public void setMaxCompletionTokens( @Nullable final Integer maxCompletionTokens) {
    this.maxCompletionTokens = maxCompletionTokens;
  }

  /**
   * Set the presencePenalty of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param presencePenalty  Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics. 
   * Minimum: -2
   * Maximum: 2
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest presencePenalty( @Nullable final BigDecimal presencePenalty) {
    this.presencePenalty = presencePenalty;
    return this;
  }

  /**
   * Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics. 
   * minimum: -2
   * maximum: 2
   * @return presencePenalty  The presencePenalty of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public BigDecimal getPresencePenalty() {
    return presencePenalty;
  }

  /**
   * Set the presencePenalty of this {@link CreateChatCompletionRequest} instance.
   *
   * @param presencePenalty  Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&#39;s likelihood to talk about new topics. 
   * Minimum: -2
   * Maximum: 2
   */
  public void setPresencePenalty( @Nullable final BigDecimal presencePenalty) {
    this.presencePenalty = presencePenalty;
  }

  /**
   * Set the frequencyPenalty of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param frequencyPenalty  Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim. 
   * Minimum: -2
   * Maximum: 2
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest frequencyPenalty( @Nullable final BigDecimal frequencyPenalty) {
    this.frequencyPenalty = frequencyPenalty;
    return this;
  }

  /**
   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim. 
   * minimum: -2
   * maximum: 2
   * @return frequencyPenalty  The frequencyPenalty of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public BigDecimal getFrequencyPenalty() {
    return frequencyPenalty;
  }

  /**
   * Set the frequencyPenalty of this {@link CreateChatCompletionRequest} instance.
   *
   * @param frequencyPenalty  Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&#39;s likelihood to repeat the same line verbatim. 
   * Minimum: -2
   * Maximum: 2
   */
  public void setFrequencyPenalty( @Nullable final BigDecimal frequencyPenalty) {
    this.frequencyPenalty = frequencyPenalty;
  }

  /**
   * Set the logitBias of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param logitBias  Modify the likelihood of specified tokens appearing in the completion.  Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest logitBias( @Nullable final Map<String, Integer> logitBias) {
    this.logitBias = logitBias;
    return this;
  }

  /**
   * Put one logitBias instance to this {@link CreateChatCompletionRequest} instance.
   * @param key The String key of this logitBias instance
   * @param logitBiasItem The logitBias that should be added under the given key
   * @return The same instance of type {@link CreateChatCompletionRequest}
   */
  @Nonnull public CreateChatCompletionRequest putlogitBiasItem( @Nonnull final String key, @Nonnull final Integer logitBiasItem) {
    if (this.logitBias == null) {
      this.logitBias = new HashMap<>();
    }
    this.logitBias.put(key, logitBiasItem);
    return this;
  }

  /**
   * Modify the likelihood of specified tokens appearing in the completion.  Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. 
   * @return logitBias  The logitBias of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Map<String, Integer> getLogitBias() {
    return logitBias;
  }

  /**
   * Set the logitBias of this {@link CreateChatCompletionRequest} instance.
   *
   * @param logitBias  Modify the likelihood of specified tokens appearing in the completion.  Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. 
   */
  public void setLogitBias( @Nullable final Map<String, Integer> logitBias) {
    this.logitBias = logitBias;
  }

  /**
   * Set the user of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param user  A unique identifier representing your end-user, which can help to monitor and detect abuse. 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest user( @Nullable final String user) {
    this.user = user;
    return this;
  }

  /**
   * A unique identifier representing your end-user, which can help to monitor and detect abuse. 
   * @return user  The user of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public String getUser() {
    return user;
  }

  /**
   * Set the user of this {@link CreateChatCompletionRequest} instance.
   *
   * @param user  A unique identifier representing your end-user, which can help to monitor and detect abuse. 
   */
  public void setUser( @Nullable final String user) {
    this.user = user;
  }

  /**
   * Set the messages of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param messages  A list of messages comprising the conversation so far. [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb).
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest messages( @Nonnull final List<ChatCompletionRequestMessage> messages) {
    this.messages = messages;
    return this;
  }
  /**
   * Add one messages instance to this {@link CreateChatCompletionRequest}.
   * @param messagesItem The messages that should be added
   * @return The same instance of type {@link CreateChatCompletionRequest}
   */
  @Nonnull public CreateChatCompletionRequest addMessagesItem( @Nonnull final ChatCompletionRequestMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * A list of messages comprising the conversation so far. [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb).
   * @return messages  The messages of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public List<ChatCompletionRequestMessage> getMessages() {
    return messages;
  }

  /**
   * Set the messages of this {@link CreateChatCompletionRequest} instance.
   *
   * @param messages  A list of messages comprising the conversation so far. [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb).
   */
  public void setMessages( @Nonnull final List<ChatCompletionRequestMessage> messages) {
    this.messages = messages;
  }

  /**
   * Set the dataSources of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param dataSources    The configuration entries for Azure OpenAI chat extensions that use them.   This additional specification is only compatible with Azure OpenAI.
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest dataSources( @Nullable final List<AzureChatExtensionConfiguration> dataSources) {
    this.dataSources = dataSources;
    return this;
  }
  /**
   * Add one dataSources instance to this {@link CreateChatCompletionRequest}.
   * @param dataSourcesItem The dataSources that should be added
   * @return The same instance of type {@link CreateChatCompletionRequest}
   */
  @Nonnull public CreateChatCompletionRequest addDataSourcesItem( @Nonnull final AzureChatExtensionConfiguration dataSourcesItem) {
    if (this.dataSources == null) {
      this.dataSources = new ArrayList<>();
    }
    this.dataSources.add(dataSourcesItem);
    return this;
  }

  /**
   *   The configuration entries for Azure OpenAI chat extensions that use them.   This additional specification is only compatible with Azure OpenAI.
   * @return dataSources  The dataSources of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public List<AzureChatExtensionConfiguration> getDataSources() {
    return dataSources;
  }

  /**
   * Set the dataSources of this {@link CreateChatCompletionRequest} instance.
   *
   * @param dataSources    The configuration entries for Azure OpenAI chat extensions that use them.   This additional specification is only compatible with Azure OpenAI.
   */
  public void setDataSources( @Nullable final List<AzureChatExtensionConfiguration> dataSources) {
    this.dataSources = dataSources;
  }

  /**
   * Set the logprobs of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param logprobs  Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the &#x60;content&#x60; of &#x60;message&#x60;.
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest logprobs( @Nullable final Boolean logprobs) {
    this.logprobs = logprobs;
    return this;
  }

  /**
   * Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the &#x60;content&#x60; of &#x60;message&#x60;.
   * @return logprobs  The logprobs of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Boolean isLogprobs() {
    return logprobs;
  }

  /**
   * Set the logprobs of this {@link CreateChatCompletionRequest} instance.
   *
   * @param logprobs  Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the &#x60;content&#x60; of &#x60;message&#x60;.
   */
  public void setLogprobs( @Nullable final Boolean logprobs) {
    this.logprobs = logprobs;
  }

  /**
   * Set the topLogprobs of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param topLogprobs  An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. &#x60;logprobs&#x60; must be set to &#x60;true&#x60; if this parameter is used.
   * Minimum: 0
   * Maximum: 20
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest topLogprobs( @Nullable final Integer topLogprobs) {
    this.topLogprobs = topLogprobs;
    return this;
  }

  /**
   * An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. &#x60;logprobs&#x60; must be set to &#x60;true&#x60; if this parameter is used.
   * minimum: 0
   * maximum: 20
   * @return topLogprobs  The topLogprobs of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Integer getTopLogprobs() {
    return topLogprobs;
  }

  /**
   * Set the topLogprobs of this {@link CreateChatCompletionRequest} instance.
   *
   * @param topLogprobs  An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. &#x60;logprobs&#x60; must be set to &#x60;true&#x60; if this parameter is used.
   * Minimum: 0
   * Maximum: 20
   */
  public void setTopLogprobs( @Nullable final Integer topLogprobs) {
    this.topLogprobs = topLogprobs;
  }

  /**
   * Set the n of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param n  How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep &#x60;n&#x60; as &#x60;1&#x60; to minimize costs.
   * Minimum: 1
   * Maximum: 128
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest n( @Nullable final Integer n) {
    this.n = n;
    return this;
  }

  /**
   * How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep &#x60;n&#x60; as &#x60;1&#x60; to minimize costs.
   * minimum: 1
   * maximum: 128
   * @return n  The n of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Integer getN() {
    return n;
  }

  /**
   * Set the n of this {@link CreateChatCompletionRequest} instance.
   *
   * @param n  How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep &#x60;n&#x60; as &#x60;1&#x60; to minimize costs.
   * Minimum: 1
   * Maximum: 128
   */
  public void setN( @Nullable final Integer n) {
    this.n = n;
  }

  /**
   * Set the parallelToolCalls of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param parallelToolCalls  Whether to enable parallel function calling during tool use.
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest parallelToolCalls( @Nullable final Boolean parallelToolCalls) {
    this.parallelToolCalls = parallelToolCalls;
    return this;
  }

  /**
   * Whether to enable parallel function calling during tool use.
   * @return parallelToolCalls  The parallelToolCalls of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public Boolean isParallelToolCalls() {
    return parallelToolCalls;
  }

  /**
   * Set the parallelToolCalls of this {@link CreateChatCompletionRequest} instance.
   *
   * @param parallelToolCalls  Whether to enable parallel function calling during tool use.
   */
  public void setParallelToolCalls( @Nullable final Boolean parallelToolCalls) {
    this.parallelToolCalls = parallelToolCalls;
  }

  /**
   * Set the responseFormat of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param responseFormat  The responseFormat of this {@link CreateChatCompletionRequest}
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest responseFormat( @Nullable final CreateChatCompletionRequestAllOfResponseFormat responseFormat) {
    this.responseFormat = responseFormat;
    return this;
  }

  /**
   * Get responseFormat
   * @return responseFormat  The responseFormat of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public CreateChatCompletionRequestAllOfResponseFormat getResponseFormat() {
    return responseFormat;
  }

  /**
   * Set the responseFormat of this {@link CreateChatCompletionRequest} instance.
   *
   * @param responseFormat  The responseFormat of this {@link CreateChatCompletionRequest}
   */
  public void setResponseFormat( @Nullable final CreateChatCompletionRequestAllOfResponseFormat responseFormat) {
    this.responseFormat = responseFormat;
  }

  /**
   * Set the seed of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param seed  This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same &#x60;seed&#x60; and parameters should return the same result. Determinism is not guaranteed, and you should refer to the &#x60;system_fingerprint&#x60; response parameter to monitor changes in the backend. 
   * Minimum: -9223372036854775808
   * Maximum: 9223372036854775807
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest seed( @Nullable final Integer seed) {
    this.seed = seed;
    return this;
  }

  /**
   * This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same &#x60;seed&#x60; and parameters should return the same result. Determinism is not guaranteed, and you should refer to the &#x60;system_fingerprint&#x60; response parameter to monitor changes in the backend. 
   * minimum: -9223372036854775808
   * maximum: 9223372036854775807
   * @return seed  The seed of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public Integer getSeed() {
    return seed;
  }

  /**
   * Set the seed of this {@link CreateChatCompletionRequest} instance.
   *
   * @param seed  This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same &#x60;seed&#x60; and parameters should return the same result. Determinism is not guaranteed, and you should refer to the &#x60;system_fingerprint&#x60; response parameter to monitor changes in the backend. 
   * Minimum: -9223372036854775808
   * Maximum: 9223372036854775807
   */
  public void setSeed( @Nullable final Integer seed) {
    this.seed = seed;
  }

  /**
   * Set the streamOptions of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param streamOptions  The streamOptions of this {@link CreateChatCompletionRequest}
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest streamOptions( @Nullable final ChatCompletionStreamOptions streamOptions) {
    this.streamOptions = streamOptions;
    return this;
  }

  /**
   * Get streamOptions
   * @return streamOptions  The streamOptions of this {@link CreateChatCompletionRequest} instance.
   */
  @Nullable
  public ChatCompletionStreamOptions getStreamOptions() {
    return streamOptions;
  }

  /**
   * Set the streamOptions of this {@link CreateChatCompletionRequest} instance.
   *
   * @param streamOptions  The streamOptions of this {@link CreateChatCompletionRequest}
   */
  public void setStreamOptions( @Nullable final ChatCompletionStreamOptions streamOptions) {
    this.streamOptions = streamOptions;
  }

  /**
   * Set the tools of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param tools  A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported. 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest tools( @Nullable final List<ChatCompletionTool> tools) {
    this.tools = tools;
    return this;
  }
  /**
   * Add one tools instance to this {@link CreateChatCompletionRequest}.
   * @param toolsItem The tools that should be added
   * @return The same instance of type {@link CreateChatCompletionRequest}
   */
  @Nonnull public CreateChatCompletionRequest addToolsItem( @Nonnull final ChatCompletionTool toolsItem) {
    if (this.tools == null) {
      this.tools = new ArrayList<>();
    }
    this.tools.add(toolsItem);
    return this;
  }

  /**
   * A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported. 
   * @return tools  The tools of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public List<ChatCompletionTool> getTools() {
    return tools;
  }

  /**
   * Set the tools of this {@link CreateChatCompletionRequest} instance.
   *
   * @param tools  A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported. 
   */
  public void setTools( @Nullable final List<ChatCompletionTool> tools) {
    this.tools = tools;
  }

  /**
   * Set the toolChoice of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param toolChoice  The toolChoice of this {@link CreateChatCompletionRequest}
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest toolChoice( @Nullable final ChatCompletionToolChoiceOption toolChoice) {
    this.toolChoice = toolChoice;
    return this;
  }

  /**
   * Get toolChoice
   * @return toolChoice  The toolChoice of this {@link CreateChatCompletionRequest} instance.
   */
  @Nonnull
  public ChatCompletionToolChoiceOption getToolChoice() {
    return toolChoice;
  }

  /**
   * Set the toolChoice of this {@link CreateChatCompletionRequest} instance.
   *
   * @param toolChoice  The toolChoice of this {@link CreateChatCompletionRequest}
   */
  public void setToolChoice( @Nullable final ChatCompletionToolChoiceOption toolChoice) {
    this.toolChoice = toolChoice;
  }

  /**
   * Set the functionCall of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param functionCall  The functionCall of this {@link CreateChatCompletionRequest}
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest functionCall( @Nullable final CreateChatCompletionRequestAllOfFunctionCall functionCall) {
    this.functionCall = functionCall;
    return this;
  }

  /**
   * Get functionCall
   * @return functionCall  The functionCall of this {@link CreateChatCompletionRequest} instance.
   * @deprecated
   */
  @Deprecated
  @Nonnull
  public CreateChatCompletionRequestAllOfFunctionCall getFunctionCall() {
    return functionCall;
  }

  /**
   * Set the functionCall of this {@link CreateChatCompletionRequest} instance.
   *
   * @param functionCall  The functionCall of this {@link CreateChatCompletionRequest}
   */
  public void setFunctionCall( @Nullable final CreateChatCompletionRequestAllOfFunctionCall functionCall) {
    this.functionCall = functionCall;
  }

  /**
   * Set the functions of this {@link CreateChatCompletionRequest} instance and return the same instance.
   *
   * @param functions  Deprecated in favor of &#x60;tools&#x60;.  A list of functions the model may generate JSON inputs for. 
   * @return The same instance of this {@link CreateChatCompletionRequest} class
   */
  @Nonnull public CreateChatCompletionRequest functions( @Nullable final List<ChatCompletionFunctions> functions) {
    this.functions = functions;
    return this;
  }
  /**
   * Add one functions instance to this {@link CreateChatCompletionRequest}.
   * @param functionsItem The functions that should be added
   * @return The same instance of type {@link CreateChatCompletionRequest}
   */
  @Nonnull public CreateChatCompletionRequest addFunctionsItem( @Nonnull final ChatCompletionFunctions functionsItem) {
    if (this.functions == null) {
      this.functions = new ArrayList<>();
    }
    this.functions.add(functionsItem);
    return this;
  }

  /**
   * Deprecated in favor of &#x60;tools&#x60;.  A list of functions the model may generate JSON inputs for. 
   * @return functions  The functions of this {@link CreateChatCompletionRequest} instance.
   * @deprecated
   */
  @Deprecated
  @Nonnull
  public List<ChatCompletionFunctions> getFunctions() {
    return functions;
  }

  /**
   * Set the functions of this {@link CreateChatCompletionRequest} instance.
   *
   * @param functions  Deprecated in favor of &#x60;tools&#x60;.  A list of functions the model may generate JSON inputs for. 
   */
  public void setFunctions( @Nullable final List<ChatCompletionFunctions> functions) {
    this.functions = functions;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link CreateChatCompletionRequest}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link CreateChatCompletionRequest} instance.
   * @deprecated Use {@link #toMap()} instead.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField( @Nonnull final String name ) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("CreateChatCompletionRequest has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link CreateChatCompletionRequest} instance including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap()
  {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if( temperature != null ) declaredFields.put("temperature", temperature);
    if( topP != null ) declaredFields.put("topP", topP);
    if( stream != null ) declaredFields.put("stream", stream);
    if( stop != null ) declaredFields.put("stop", stop);
    if( maxTokens != null ) declaredFields.put("maxTokens", maxTokens);
    if( maxCompletionTokens != null ) declaredFields.put("maxCompletionTokens", maxCompletionTokens);
    if( presencePenalty != null ) declaredFields.put("presencePenalty", presencePenalty);
    if( frequencyPenalty != null ) declaredFields.put("frequencyPenalty", frequencyPenalty);
    if( logitBias != null ) declaredFields.put("logitBias", logitBias);
    if( user != null ) declaredFields.put("user", user);
    if( messages != null ) declaredFields.put("messages", messages);
    if( dataSources != null ) declaredFields.put("dataSources", dataSources);
    if( logprobs != null ) declaredFields.put("logprobs", logprobs);
    if( topLogprobs != null ) declaredFields.put("topLogprobs", topLogprobs);
    if( n != null ) declaredFields.put("n", n);
    if( parallelToolCalls != null ) declaredFields.put("parallelToolCalls", parallelToolCalls);
    if( responseFormat != null ) declaredFields.put("responseFormat", responseFormat);
    if( seed != null ) declaredFields.put("seed", seed);
    if( streamOptions != null ) declaredFields.put("streamOptions", streamOptions);
    if( tools != null ) declaredFields.put("tools", tools);
    if( toolChoice != null ) declaredFields.put("toolChoice", toolChoice);
    if( functionCall != null ) declaredFields.put("functionCall", functionCall);
    if( functions != null ) declaredFields.put("functions", functions);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link CreateChatCompletionRequest} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final CreateChatCompletionRequest createChatCompletionRequest = (CreateChatCompletionRequest) o;
    return Objects.equals(this.cloudSdkCustomFields, createChatCompletionRequest.cloudSdkCustomFields) &&
        Objects.equals(this.temperature, createChatCompletionRequest.temperature) &&
        Objects.equals(this.topP, createChatCompletionRequest.topP) &&
        Objects.equals(this.stream, createChatCompletionRequest.stream) &&
        Objects.equals(this.stop, createChatCompletionRequest.stop) &&
        Objects.equals(this.maxTokens, createChatCompletionRequest.maxTokens) &&
        Objects.equals(this.maxCompletionTokens, createChatCompletionRequest.maxCompletionTokens) &&
        Objects.equals(this.presencePenalty, createChatCompletionRequest.presencePenalty) &&
        Objects.equals(this.frequencyPenalty, createChatCompletionRequest.frequencyPenalty) &&
        Objects.equals(this.logitBias, createChatCompletionRequest.logitBias) &&
        Objects.equals(this.user, createChatCompletionRequest.user) &&
        Objects.equals(this.messages, createChatCompletionRequest.messages) &&
        Objects.equals(this.dataSources, createChatCompletionRequest.dataSources) &&
        Objects.equals(this.logprobs, createChatCompletionRequest.logprobs) &&
        Objects.equals(this.topLogprobs, createChatCompletionRequest.topLogprobs) &&
        Objects.equals(this.n, createChatCompletionRequest.n) &&
        Objects.equals(this.parallelToolCalls, createChatCompletionRequest.parallelToolCalls) &&
        Objects.equals(this.responseFormat, createChatCompletionRequest.responseFormat) &&
        Objects.equals(this.seed, createChatCompletionRequest.seed) &&
        Objects.equals(this.streamOptions, createChatCompletionRequest.streamOptions) &&
        Objects.equals(this.tools, createChatCompletionRequest.tools) &&
        Objects.equals(this.toolChoice, createChatCompletionRequest.toolChoice) &&
        Objects.equals(this.functionCall, createChatCompletionRequest.functionCall) &&
        Objects.equals(this.functions, createChatCompletionRequest.functions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(temperature, topP, stream, stop, maxTokens, maxCompletionTokens, presencePenalty, frequencyPenalty, logitBias, user, messages, dataSources, logprobs, topLogprobs, n, parallelToolCalls, responseFormat, seed, streamOptions, tools, toolChoice, functionCall, functions, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class CreateChatCompletionRequest {\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    topP: ").append(toIndentedString(topP)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("    stop: ").append(toIndentedString(stop)).append("\n");
    sb.append("    maxTokens: ").append(toIndentedString(maxTokens)).append("\n");
    sb.append("    maxCompletionTokens: ").append(toIndentedString(maxCompletionTokens)).append("\n");
    sb.append("    presencePenalty: ").append(toIndentedString(presencePenalty)).append("\n");
    sb.append("    frequencyPenalty: ").append(toIndentedString(frequencyPenalty)).append("\n");
    sb.append("    logitBias: ").append(toIndentedString(logitBias)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    logprobs: ").append(toIndentedString(logprobs)).append("\n");
    sb.append("    topLogprobs: ").append(toIndentedString(topLogprobs)).append("\n");
    sb.append("    n: ").append(toIndentedString(n)).append("\n");
    sb.append("    parallelToolCalls: ").append(toIndentedString(parallelToolCalls)).append("\n");
    sb.append("    responseFormat: ").append(toIndentedString(responseFormat)).append("\n");
    sb.append("    seed: ").append(toIndentedString(seed)).append("\n");
    sb.append("    streamOptions: ").append(toIndentedString(streamOptions)).append("\n");
    sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
    sb.append("    toolChoice: ").append(toIndentedString(toolChoice)).append("\n");
    sb.append("    functionCall: ").append(toIndentedString(functionCall)).append("\n");
    sb.append("    functions: ").append(toIndentedString(functions)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Azure OpenAI Service API
 * Azure OpenAI APIs for completions and search
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.services.openai.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * Optional settings to control how fields are processed when using a configured Azure Cosmos DB resource.
 */
// CHECKSTYLE:OFF
public class AzureCosmosDBFieldMappingOptions 
// CHECKSTYLE:ON
{
  @JsonProperty("title_field")
  private String titleField;

  @JsonProperty("url_field")
  private String urlField;

  @JsonProperty("filepath_field")
  private String filepathField;

  @JsonProperty("content_fields")
  private List<String> contentFields = new ArrayList<>();

  @JsonProperty("content_fields_separator")
  private String contentFieldsSeparator;

  @JsonProperty("vector_fields")
  private List<String> vectorFields = new ArrayList<>();

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

  /**
   * Set the titleField of this {@link AzureCosmosDBFieldMappingOptions} instance and return the same instance.
   *
   * @param titleField  The name of the index field to use as a title.
   * @return The same instance of this {@link AzureCosmosDBFieldMappingOptions} class
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions titleField( @Nullable final String titleField) {
    this.titleField = titleField;
    return this;
  }

  /**
   * The name of the index field to use as a title.
   * @return titleField  The titleField of this {@link AzureCosmosDBFieldMappingOptions} instance.
   */
  @Nonnull
  public String getTitleField() {
    return titleField;
  }

  /**
   * Set the titleField of this {@link AzureCosmosDBFieldMappingOptions} instance.
   *
   * @param titleField  The name of the index field to use as a title.
   */
  public void setTitleField( @Nullable final String titleField) {
    this.titleField = titleField;
  }

  /**
   * Set the urlField of this {@link AzureCosmosDBFieldMappingOptions} instance and return the same instance.
   *
   * @param urlField  The name of the index field to use as a URL.
   * @return The same instance of this {@link AzureCosmosDBFieldMappingOptions} class
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions urlField( @Nullable final String urlField) {
    this.urlField = urlField;
    return this;
  }

  /**
   * The name of the index field to use as a URL.
   * @return urlField  The urlField of this {@link AzureCosmosDBFieldMappingOptions} instance.
   */
  @Nonnull
  public String getUrlField() {
    return urlField;
  }

  /**
   * Set the urlField of this {@link AzureCosmosDBFieldMappingOptions} instance.
   *
   * @param urlField  The name of the index field to use as a URL.
   */
  public void setUrlField( @Nullable final String urlField) {
    this.urlField = urlField;
  }

  /**
   * Set the filepathField of this {@link AzureCosmosDBFieldMappingOptions} instance and return the same instance.
   *
   * @param filepathField  The name of the index field to use as a filepath.
   * @return The same instance of this {@link AzureCosmosDBFieldMappingOptions} class
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions filepathField( @Nullable final String filepathField) {
    this.filepathField = filepathField;
    return this;
  }

  /**
   * The name of the index field to use as a filepath.
   * @return filepathField  The filepathField of this {@link AzureCosmosDBFieldMappingOptions} instance.
   */
  @Nonnull
  public String getFilepathField() {
    return filepathField;
  }

  /**
   * Set the filepathField of this {@link AzureCosmosDBFieldMappingOptions} instance.
   *
   * @param filepathField  The name of the index field to use as a filepath.
   */
  public void setFilepathField( @Nullable final String filepathField) {
    this.filepathField = filepathField;
  }

  /**
   * Set the contentFields of this {@link AzureCosmosDBFieldMappingOptions} instance and return the same instance.
   *
   * @param contentFields  The names of index fields that should be treated as content.
   * @return The same instance of this {@link AzureCosmosDBFieldMappingOptions} class
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions contentFields( @Nonnull final List<String> contentFields) {
    this.contentFields = contentFields;
    return this;
  }
  /**
   * Add one contentFields instance to this {@link AzureCosmosDBFieldMappingOptions}.
   * @param contentFieldsItem The contentFields that should be added
   * @return The same instance of type {@link AzureCosmosDBFieldMappingOptions}
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions addContentFieldsItem( @Nonnull final String contentFieldsItem) {
    if (this.contentFields == null) {
      this.contentFields = new ArrayList<>();
    }
    this.contentFields.add(contentFieldsItem);
    return this;
  }

  /**
   * The names of index fields that should be treated as content.
   * @return contentFields  The contentFields of this {@link AzureCosmosDBFieldMappingOptions} instance.
   */
  @Nonnull
  public List<String> getContentFields() {
    return contentFields;
  }

  /**
   * Set the contentFields of this {@link AzureCosmosDBFieldMappingOptions} instance.
   *
   * @param contentFields  The names of index fields that should be treated as content.
   */
  public void setContentFields( @Nonnull final List<String> contentFields) {
    this.contentFields = contentFields;
  }

  /**
   * Set the contentFieldsSeparator of this {@link AzureCosmosDBFieldMappingOptions} instance and return the same instance.
   *
   * @param contentFieldsSeparator  The separator pattern that content fields should use.
   * @return The same instance of this {@link AzureCosmosDBFieldMappingOptions} class
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions contentFieldsSeparator( @Nullable final String contentFieldsSeparator) {
    this.contentFieldsSeparator = contentFieldsSeparator;
    return this;
  }

  /**
   * The separator pattern that content fields should use.
   * @return contentFieldsSeparator  The contentFieldsSeparator of this {@link AzureCosmosDBFieldMappingOptions} instance.
   */
  @Nonnull
  public String getContentFieldsSeparator() {
    return contentFieldsSeparator;
  }

  /**
   * Set the contentFieldsSeparator of this {@link AzureCosmosDBFieldMappingOptions} instance.
   *
   * @param contentFieldsSeparator  The separator pattern that content fields should use.
   */
  public void setContentFieldsSeparator( @Nullable final String contentFieldsSeparator) {
    this.contentFieldsSeparator = contentFieldsSeparator;
  }

  /**
   * Set the vectorFields of this {@link AzureCosmosDBFieldMappingOptions} instance and return the same instance.
   *
   * @param vectorFields  The names of fields that represent vector data.
   * @return The same instance of this {@link AzureCosmosDBFieldMappingOptions} class
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions vectorFields( @Nonnull final List<String> vectorFields) {
    this.vectorFields = vectorFields;
    return this;
  }
  /**
   * Add one vectorFields instance to this {@link AzureCosmosDBFieldMappingOptions}.
   * @param vectorFieldsItem The vectorFields that should be added
   * @return The same instance of type {@link AzureCosmosDBFieldMappingOptions}
   */
  @Nonnull public AzureCosmosDBFieldMappingOptions addVectorFieldsItem( @Nonnull final String vectorFieldsItem) {
    if (this.vectorFields == null) {
      this.vectorFields = new ArrayList<>();
    }
    this.vectorFields.add(vectorFieldsItem);
    return this;
  }

  /**
   * The names of fields that represent vector data.
   * @return vectorFields  The vectorFields of this {@link AzureCosmosDBFieldMappingOptions} instance.
   */
  @Nonnull
  public List<String> getVectorFields() {
    return vectorFields;
  }

  /**
   * Set the vectorFields of this {@link AzureCosmosDBFieldMappingOptions} instance.
   *
   * @param vectorFields  The names of fields that represent vector data.
   */
  public void setVectorFields( @Nonnull final List<String> vectorFields) {
    this.vectorFields = vectorFields;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link AzureCosmosDBFieldMappingOptions}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link AzureCosmosDBFieldMappingOptions} instance.
   * @deprecated Use {@link #toMap()} instead.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  @Deprecated
  public Object getCustomField( @Nonnull final String name ) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("AzureCosmosDBFieldMappingOptions has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Get the value of all properties of this {@link AzureCosmosDBFieldMappingOptions} instance including unrecognized properties.
   *
   * @return The map of all properties
   */
  @JsonIgnore
  @Nonnull
  public Map<String, Object> toMap()
  {
    final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
    if( titleField != null ) declaredFields.put("titleField", titleField);
    if( urlField != null ) declaredFields.put("urlField", urlField);
    if( filepathField != null ) declaredFields.put("filepathField", filepathField);
    if( contentFields != null ) declaredFields.put("contentFields", contentFields);
    if( contentFieldsSeparator != null ) declaredFields.put("contentFieldsSeparator", contentFieldsSeparator);
    if( vectorFields != null ) declaredFields.put("vectorFields", vectorFields);
    return declaredFields;
  }

  /**
   * Set an unrecognizable property of this {@link AzureCosmosDBFieldMappingOptions} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final AzureCosmosDBFieldMappingOptions azureCosmosDBFieldMappingOptions = (AzureCosmosDBFieldMappingOptions) o;
    return Objects.equals(this.cloudSdkCustomFields, azureCosmosDBFieldMappingOptions.cloudSdkCustomFields) &&
        Objects.equals(this.titleField, azureCosmosDBFieldMappingOptions.titleField) &&
        Objects.equals(this.urlField, azureCosmosDBFieldMappingOptions.urlField) &&
        Objects.equals(this.filepathField, azureCosmosDBFieldMappingOptions.filepathField) &&
        Objects.equals(this.contentFields, azureCosmosDBFieldMappingOptions.contentFields) &&
        Objects.equals(this.contentFieldsSeparator, azureCosmosDBFieldMappingOptions.contentFieldsSeparator) &&
        Objects.equals(this.vectorFields, azureCosmosDBFieldMappingOptions.vectorFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(titleField, urlField, filepathField, contentFields, contentFieldsSeparator, vectorFields, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class AzureCosmosDBFieldMappingOptions {\n");
    sb.append("    titleField: ").append(toIndentedString(titleField)).append("\n");
    sb.append("    urlField: ").append(toIndentedString(urlField)).append("\n");
    sb.append("    filepathField: ").append(toIndentedString(filepathField)).append("\n");
    sb.append("    contentFields: ").append(toIndentedString(contentFields)).append("\n");
    sb.append("    contentFieldsSeparator: ").append(toIndentedString(contentFieldsSeparator)).append("\n");
    sb.append("    vectorFields: ").append(toIndentedString(vectorFields)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


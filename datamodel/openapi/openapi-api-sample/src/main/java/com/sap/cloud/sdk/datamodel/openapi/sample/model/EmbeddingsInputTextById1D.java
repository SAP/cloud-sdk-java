/*
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * SodaStore API
 * API for managing soda products and orders in SodaStore.
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sap.cloud.sdk.datamodel.openapi.sample.model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmbeddingsInputTextById1D
 */
// CHECKSTYLE:OFF
public class EmbeddingsInputTextById1D implements EmbeddingsInputTextById
// CHECKSTYLE:ON
{
    @JsonProperty( "vector" )
    private List<Integer> vector = new ArrayList<>();

    @JsonAnySetter
    @JsonAnyGetter
    private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

    /**
     * Default constructor for EmbeddingsInputTextById1D.
     */
    protected EmbeddingsInputTextById1D()
    {
    }

    /**
     * Set the vector of this {@link EmbeddingsInputTextById1D} instance and return the same instance.
     *
     * @param vector
     *            The vector of this {@link EmbeddingsInputTextById1D}
     * @return The same instance of this {@link EmbeddingsInputTextById1D} class
     */
    @Nonnull
    public EmbeddingsInputTextById1D vector( @Nonnull final List<Integer> vector )
    {
        this.vector = vector;
        return this;
    }

    /**
     * Add one vector instance to this {@link EmbeddingsInputTextById1D}.
     *
     * @param vectorItem
     *            The vector that should be added
     * @return The same instance of type {@link EmbeddingsInputTextById1D}
     */
    @Nonnull
    public EmbeddingsInputTextById1D addVectorItem( @Nonnull final Integer vectorItem )
    {
        if( this.vector == null ) {
            this.vector = new ArrayList<>();
        }
        this.vector.add(vectorItem);
        return this;
    }

    /**
     * Get vector
     *
     * @return vector The vector of this {@link EmbeddingsInputTextById1D} instance.
     */
    @Nonnull
    public List<Integer> getVector()
    {
        return vector;
    }

    /**
     * Set the vector of this {@link EmbeddingsInputTextById1D} instance.
     *
     * @param vector
     *            The vector of this {@link EmbeddingsInputTextById1D}
     */
    public void setVector( @Nonnull final List<Integer> vector )
    {
        this.vector = vector;
    }

    /**
     * Get the names of the unrecognizable properties of the {@link EmbeddingsInputTextById1D}.
     *
     * @return The set of properties names
     */
    @JsonIgnore
    @Nonnull
    public Set<String> getCustomFieldNames()
    {
        return cloudSdkCustomFields.keySet();
    }

    /**
     * Get the value of an unrecognizable property of this {@link EmbeddingsInputTextById1D} instance.
     *
     * @deprecated Use {@link #toMap()} instead.
     * @param name
     *            The name of the property
     * @return The value of the property
     * @throws NoSuchElementException
     *             If no property with the given name could be found.
     */
    @Nullable
    @Deprecated
    public Object getCustomField( @Nonnull final String name )
        throws NoSuchElementException
    {
        if( !cloudSdkCustomFields.containsKey(name) ) {
            throw new NoSuchElementException("EmbeddingsInputTextById1D has no field with name '" + name + "'.");
        }
        return cloudSdkCustomFields.get(name);
    }

    /**
     * Get the value of all properties of this {@link EmbeddingsInputTextById1D} instance including unrecognized
     * properties.
     *
     * @return The map of all properties
     */
    @JsonIgnore
    @Nonnull
    public Map<String, Object> toMap()
    {
        final Map<String, Object> declaredFields = new LinkedHashMap<>(cloudSdkCustomFields);
        if( vector != null )
            declaredFields.put("vector", vector);
        return declaredFields;
    }

    /**
     * Set an unrecognizable property of this {@link EmbeddingsInputTextById1D} instance. If the map previously
     * contained a mapping for the key, the old value is replaced by the specified value.
     *
     * @param customFieldName
     *            The name of the property
     * @param customFieldValue
     *            The value of the property
     */
    @JsonIgnore
    public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
    {
        cloudSdkCustomFields.put(customFieldName, customFieldValue);
    }

    @Override
    public boolean equals( @Nullable final java.lang.Object o )
    {
        if( this == o ) {
            return true;
        }
        if( o == null || getClass() != o.getClass() ) {
            return false;
        }
        final EmbeddingsInputTextById1D embeddingsInputTextById1D = (EmbeddingsInputTextById1D) o;
        return Objects.equals(this.cloudSdkCustomFields, embeddingsInputTextById1D.cloudSdkCustomFields)
            && Objects.equals(this.vector, embeddingsInputTextById1D.vector);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(vector, cloudSdkCustomFields);
    }

    @Override
    @Nonnull
    public String toString()
    {
        final StringBuilder sb = new StringBuilder();
        sb.append("class EmbeddingsInputTextById1D {\n");
        sb.append("    vector: ").append(toIndentedString(vector)).append("\n");
        cloudSdkCustomFields
            .forEach(( k, v ) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString( final java.lang.Object o )
    {
        if( o == null ) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Create a type-safe, fluent-api builder object to construct a new {@link EmbeddingsInputTextById1D} instance with
     * all required arguments.
     */
    public static Builder create()
    {
        return ( vector ) -> new EmbeddingsInputTextById1D().vector(vector);
    }

    /**
     * Builder helper class.
     */
    public interface Builder
    {
        /**
         * Set the vector of this {@link EmbeddingsInputTextById1D} instance.
         *
         * @param vector
         *            The vector of this {@link EmbeddingsInputTextById1D}
         * @return The EmbeddingsInputTextById1D instance.
         */
        EmbeddingsInputTextById1D vector( @Nonnull final List<Integer> vector );

        /**
         * Set the vector of this {@link EmbeddingsInputTextById1D} instance.
         *
         * @param vector
         *            The vector of this {@link EmbeddingsInputTextById1D}
         * @return The EmbeddingsInputTextById1D instance.
         */
        default EmbeddingsInputTextById1D vector( @Nonnull final Integer... vector )
        {
            return vector(Arrays.asList(vector));
        }
    }

}

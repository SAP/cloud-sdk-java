<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sap.cloud.sdk.datamodel</groupId>
		<artifactId>openapi-parent</artifactId>
		<version>5.0.0-alpha-SNAPSHOT</version>
	</parent>
	<artifactId>openapi-generator-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<name>Data Model - OpenAPI Services - Generator Maven Plugin</name>
	<description>OpenAPI Services data model (VDM) - Maven plugin for generator</description>
	<url>https://sap.github.io/cloud-sdk/docs/java/getting-started</url>
	<organization>
		<name>SAP SE</name>
		<url>https://www.sap.com</url>
	</organization>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>SAP</name>
			<email>cloudsdk@sap.com</email>
			<organization>SAP SE</organization>
			<organizationUrl>https://www.sap.com</organizationUrl>
		</developer>
	</developers>
	<scm>
		<connection />
		<url />
	</scm>
	<properties>
		<x-sap-release-audience>Public</x-sap-release-audience>
		<x-sap-release-maturity>Stable</x-sap-release-maturity>
		<!-- allow transitive use of javax.inject since this module is not included as dependency -->
		<enforcer.skipEnforceScopeJavaEE>true</enforcer.skipEnforceScopeJavaEE>
		<!-- allow scope compile for lombok since this module is not included as dependency -->
		<enforcer.skipEnforceScopeLombok>true</enforcer.skipEnforceScopeLombok>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.sap.cloud.sdk.datamodel</groupId>
			<artifactId>openapi-generator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vavr</groupId>
			<artifactId>vavr</artifactId>
		</dependency>
		<!-- scope "provided" -->
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- scope "test" -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-testing</groupId>
			<artifactId>maven-plugin-testing-harness</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-compat</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- scope provided -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<executions>
					<execution>
						<id>mojo-descriptor</id>
						<!--
						we need to have this bound to compile scope to allow for consumption of this plugin in
						other modules (when calling mvn compile). This will be executed after the inherited compile
						step, in which the class files are created that are necessary to extract the descriptor.
						 -->
						<phase>compile</phase>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<goalPrefix>openapi-generator</goalPrefix>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<ignoredUnusedDeclaredDependencies>
						<!-- Runtime dependency testing the plugin -->
						<ignoredUnusedDeclaredDependency>org.apache.maven:maven-compat</ignoredUnusedDeclaredDependency>
						<!-- junit engine -->
						<ignoredUnusedDeclaredDependency>org.junit.vintage:junit-vintage-engine</ignoredUnusedDeclaredDependency>
					</ignoredUnusedDeclaredDependencies>
					<ignoredNonTestScopedDependencies>
						<ignoredNonTestScopedDependency>com.google.code.findbugs:jsr305</ignoredNonTestScopedDependency>
					</ignoredNonTestScopedDependencies>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

/*
 * Copyright (c) 2024 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 4.21.0
 */

package com.sap.cloud.sdk.datamodel.odatav4.referenceservice.namespaces.trippin;

import java.util.Map;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.sap.cloud.sdk.datamodel.odata.client.request.ODataEntityKey;
import com.sap.cloud.sdk.datamodel.odatav4.core.VdmComplex;
import com.sap.cloud.sdk.result.ElementName;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;

/**
 * <p>
 * Original complex type name from the Odata EDM: <b>City</b>
 * </p>
 *
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString( doNotUseGetters = true, callSuper = true )
@EqualsAndHashCode( doNotUseGetters = true, callSuper = true )
@JsonAdapter( com.sap.cloud.sdk.datamodel.odatav4.adapter.GsonVdmAdapterFactory.class )
@JsonSerialize( using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectSerializer.class )
@JsonDeserialize( using = com.sap.cloud.sdk.datamodel.odatav4.adapter.JacksonVdmObjectDeserializer.class )
public class City extends VdmComplex<City>
{

    @Getter
    private final java.lang.String odataType = "Trippin.City";
    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>Name</b>
     * </p>
     *
     * @return The name contained in this {@link VdmComplex}.
     */
    @Nullable
    @ElementName( "Name" )
    private java.lang.String name;
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty.String<City> NAME =
        new com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty.String<City>(City.class, "Name");
    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>CountryRegion</b>
     * </p>
     *
     * @return The countryRegion contained in this {@link VdmComplex}.
     */
    @Nullable
    @ElementName( "CountryRegion" )
    private java.lang.String countryRegion;
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty.String<City> COUNTRY_REGION =
        new com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty.String<City>(City.class, "CountryRegion");
    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>Region</b>
     * </p>
     *
     * @return The region contained in this {@link VdmComplex}.
     */
    @Nullable
    @ElementName( "Region" )
    private java.lang.String region;
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty.String<City> REGION =
        new com.sap.cloud.sdk.datamodel.odatav4.core.SimpleProperty.String<City>(City.class, "Region");
    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>FamousBeverage</b>
     * </p>
     *
     * @return The famousBeverage contained in this {@link VdmComplex}.
     */
    @Nullable
    @ElementName( "FamousBeverage" )
    private Beverage famousBeverage;
    /**
     * Use with available request builders to apply the <b>FamousBeverage</b> complex property to query operations.
     *
     */
    public final static com.sap.cloud.sdk.datamodel.odatav4.core.ComplexProperty.Single<City, Beverage> FAMOUS_BEVERAGE =
        new com.sap.cloud.sdk.datamodel.odatav4.core.ComplexProperty.Single<City, Beverage>(
            City.class,
            "FamousBeverage",
            Beverage.class);

    @Nonnull
    @Override
    public Class<City> getType()
    {
        return City.class;
    }

    @Nonnull
    @Override
    protected Map<java.lang.String, Object> toMapOfFields()
    {
        final Map<java.lang.String, Object> values = super.toMapOfFields();
        values.put("Name", getName());
        values.put("CountryRegion", getCountryRegion());
        values.put("Region", getRegion());
        values.put("FamousBeverage", getFamousBeverage());
        return values;
    }

    @Override
    protected void fromMap( final Map<java.lang.String, Object> inputValues )
    {
        final Map<java.lang.String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if( values.containsKey("Name") ) {
                final Object value = values.remove("Name");
                if( (value == null) || (!value.equals(getName())) ) {
                    setName(((java.lang.String) value));
                }
            }
            if( values.containsKey("CountryRegion") ) {
                final Object value = values.remove("CountryRegion");
                if( (value == null) || (!value.equals(getCountryRegion())) ) {
                    setCountryRegion(((java.lang.String) value));
                }
            }
            if( values.containsKey("Region") ) {
                final Object value = values.remove("Region");
                if( (value == null) || (!value.equals(getRegion())) ) {
                    setRegion(((java.lang.String) value));
                }
            }
        }
        // structured properties
        {
            if( values.containsKey("FamousBeverage") ) {
                final Object value = values.remove("FamousBeverage");
                if( value instanceof Map ) {
                    if( getFamousBeverage() == null ) {
                        setFamousBeverage(new Beverage());
                    }
                    @SuppressWarnings( "unchecked" )
                    final Map<java.lang.String, Object> inputMap = ((Map<java.lang.String, Object>) value);
                    getFamousBeverage().fromMap(inputMap);
                }
                if( (value == null) && (getFamousBeverage() != null) ) {
                    setFamousBeverage(null);
                }
            }
        }
        // navigation properties
        {
        }
        super.fromMap(values);
    }

    @Nonnull
    @Override
    protected ODataEntityKey getKey()
    {
        final ODataEntityKey entityKey = super.getKey();
        return entityKey;
    }

    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>Name</b>
     * </p>
     *
     * @param name
     *            The name to set.
     */
    public void setName( @Nullable final java.lang.String name )
    {
        rememberChangedField("Name", this.name);
        this.name = name;
    }

    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>CountryRegion</b>
     * </p>
     *
     * @param countryRegion
     *            The countryRegion to set.
     */
    public void setCountryRegion( @Nullable final java.lang.String countryRegion )
    {
        rememberChangedField("CountryRegion", this.countryRegion);
        this.countryRegion = countryRegion;
    }

    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>Region</b>
     * </p>
     *
     * @param region
     *            The region to set.
     */
    public void setRegion( @Nullable final java.lang.String region )
    {
        rememberChangedField("Region", this.region);
        this.region = region;
    }

    /**
     * Constraints: Nullable
     * <p>
     * Original property name from the Odata EDM: <b>FamousBeverage</b>
     * </p>
     *
     * @param famousBeverage
     *            The famousBeverage to set.
     */
    public void setFamousBeverage( @Nullable final Beverage famousBeverage )
    {
        rememberChangedField("FamousBeverage", this.famousBeverage);
        this.famousBeverage = famousBeverage;
    }

}

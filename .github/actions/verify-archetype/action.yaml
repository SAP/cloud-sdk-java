name: Verify Archetype
description: Verifies (i.e. build, tests, and runs) a project created from the given archetype

inputs:
  archetype:
    description: "The archetype to use when creating the project"
    required: true

runs:
  using: composite
  steps:
    - name: Print Action Start
      run: echo ">>>>> Starting Verify Archetype Action; inputs = ${{ toJson(inputs) }}"
      shell: bash

    - name: Load Non-SDK Maven Repository
      uses: ./.github/actions/unstash-non-sdk-m2
    - name: Load SDK Maven Repository
      uses: ./.github/actions/unstash-sdk-m2

    - name: Create Temp Director
      id: create-temp-dir
      run: |
        DIR=~/.temp/${{ inputs.archetype }}
        mkdir -p $DIR
        echo "DIR=$DIR" >> $GITHUB_OUTPUT
      shell: bash

    - name: Determine Version
      id: get-version
      run: echo "VERSION=$(cat latest.json | jq -r .version)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Generate ${{ inputs.archetype }}
      working-directory: ${{ steps.create-temp-dir.outputs.DIR }}
      run: |
        mvn archetype:generate -B
        -DarchetypeCatalog=local
        -DarchetypeGroupId=com.sap.cloud.sdk.archetypes
        -DarchetypeArtifactId=${{ inputs.archetype }}
        -DarchetypeVersion=${{ steps.get-version.outputs.VERSION }}
        -DgroupId=com.sap.test
        -DartifactId=example-${{ inputs.archetype }}
        -Dversion=1.0-SNAPSHOT
        -Dpackage=com.sap.test
        -Dhttp.keepAlive=false
      shell: bash

    - name: Verify ${{ inputs.archetype }}
      working-directory: ${{ steps.create-temp-dir.outputs.DIR }}/example-${{ inputs.archetype }}
      run: |
        mvn clean verify -B
        -Dhttp.keepAlive=false
        -Dmaven.test.skip=true
      shell: bash

    - name: Test ${{ matrix.task.name }}
      working-directory: ${{ steps.create-temp-dir.outputs.DIR }}/example-${{ inputs.archetype }}
      run: mvn test -B -Dsurefire.logLevel='error'
      shell: bash

    - name: Spotbugs ${{ inputs.archetype }}
      working-directory: ${{ steps.create-temp-dir.outputs.DIR }}/example-${{ inputs.archetype }}
      run: |
        mvn com.github.spotbugs:spotbugs-maven-plugin:check -B
        -pl !integration-tests
        -Dhttp.keepAlive=false
        -Dmaven.wagon.http.pool=false
      shell: bash

    - name: Start ${{ inputs.archetype }}
      working-directory: ${{ steps.create-temp-dir.outputs.DIR }}/example-${{ inputs.archetype }}/application
      run: |
        logFilePath=log.txt
        ${{ matrix.task.startCommand }} > $logFilePath 2>&1 &
        
        if ! curl -s --retry 60 --retry-delay 3 --retry-all-errors http://127.0.0.1:8080/hello ; then
          echo "Project generated from archetype '${{ inputs.archetype }}' failed to start locally."
          cat $logFilePath
          exit 1
        fi
        
        if ! grep -q "I am running!" $logFilePath; then
          echo "Project generated from archetype '${{ inputs.archetype }}' started locally, but did not contain the expected log output."
          cat $logFilePath
          exit 1
        fi
        
        if grep -iq "caused by" $logFilePath; then
          echo "Project generated from archetype '${{ inputs.archetype }}' started locally, but an unexpected error occurred."
          cat $logFilePath
          exit 1
        fi
      shell: bash

    - name: Verify .gitignore ${{ inputs.archetype }}
      working-directory: ${{ steps.create-temp-dir.outputs.DIR }}/example-${{ inputs.archetype }}
      run: |
        if [ ! -f .gitignore ]; then
            ls -lah
            echo "Project generated from archetype '${{ inputs.archetype }}' does not contain a .gitignore file."
            exit 1
        fi
      shell: bash

    - name: Print Action End
      if: always()
      run: echo "<<<<< Finished Verify Archetype Action"
      shell: bash

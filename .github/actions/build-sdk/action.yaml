name: "Build SDK"
description: "Builds the SDK"

inputs:
  maven-args:
    description: "The arguments to pass to Maven"
    required: false
    default: "--batch-mode --fail-at-end --show-version --threads 1C"
  prepare-release:
    description: "Whether to prepare a release"
    required: true
    default: "false"
  stash-non-sdk-m2:
    description: "Whether to stash the non-sdk m2 repository"
    required: false
    default: "true"
  force-update-non-sdk-m2-stash:
    description: "Whether to force update the non-sdk m2 stash"
    required: false
    default: "false"
  stash-sdk-m2:
    description: "Whether to stash the SDK m2 repository"
    required: false
    default: "true"
  stash-sdk-targets:
    description: "Whether to stash the SDK target directories"
    required: false
    default: "true"

outputs:
  release-name:
    description: "The name of the uploaded release artifact (if any)."
    value: ${{ steps.run-maven.outputs.RELEASE_NAME }}

runs:
  using: composite
  steps:
    - name: Print Action Start
      run: echo ">>>>> Starting Build SDK Action; inputs = ${{ toJson(inputs) }}"
      shell: bash

    - name: Load Non-SDK M2
      uses: ./.github/actions/unstash-non-sdk-m2

    - name: Run Maven
      id: run-maven
      run: |
        MVN_ARGS="${{ inputs.maven-args }} install -DskipTests -DskipFormatting"
        
        if [[ "${{ inputs.prepare-release }}" == "true" ]]; then
          echo "[DEBUG] Enabling JavaDoc generation because prepare-release is true."
        
          python .pipeline/scripts/generate-javadoc-sourcepath-properties.py
          MVN_ARGS="$MVN_ARGS -Pdocs"
        fi
        
        echo "[DEBUG] Running Maven with arguments: $MVN_ARGS"
        mvn $MVN_ARGS
        
        if [[ "${{ inputs.prepare-release }}" == "true" ]]; then
          VERSION=$(cat latest.json | jq -r .version)
          echo "[DEBUG] Assembling release artifacts for version '$VERSION' because prepare-release is true."
        
          python .pipeline/scripts/generate-release-artifacts.py --version $VERSION --path-prefix release
          zip -q -r sap-cloud-sdk-java-$VERSION.zip release
          rm -rf release
      
          echo "RELEASE_NAME=sap-cloud-sdk-java-$VERSION" >> $GITHUB_OUTPUT
        else
          echo "[DEBUG] Not assembling release artifacts because prepare-release is false."
          echo "RELEASE_NAME=" >> $GITHUB_OUTPUT
        fi

      shell: bash

    - name: Create module-inventory
      run: |
        python ./scripts/create_module_inventory_file.py --sdk-root-directory ./ --output-file ./module-inventory.json --script-config ./scripts/common/_maven_module/maven_module_reader_configuration.json
      shell: bash

    - name: Local Changes Check
      uses: ./.github/actions/verify-local-changes

    - name: Upload Release Package
      if: ${{ inputs.prepare-release == 'true' }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.run-maven.outputs.RELEASE_NAME }}
        path: ${{ steps.run-maven.outputs.RELEASE_NAME }}.zip
        retention-days: 1

    - name: Save Non-SDK Maven Repository
      if: ${{ inputs.stash-non-sdk-m2 == 'true' || inputs.force-update-non-sdk-m2-stash == 'true' }}
      uses: ./.github/actions/stash-non-sdk-m2
      with:
        force-update: ${{ inputs.force-update-non-sdk-m2-stash }}
    - name: Save SDK Maven Repository
      if: ${{ inputs.stash-sdk-m2 == 'true' }}
      uses: ./.github/actions/stash-sdk-m2
    - name: Save SDK Target Dirs
      if: ${{ inputs.stash-sdk-targets == 'true' }}
      uses: ./.github/actions/stash-sdk-targets

    - name: Print Action End
      run: echo ">>>>> Finished Build SDK Action"
      shell: bash

name: "Perform Release"

on:
  pull_request_review:
    types: [submitted]
    branches: [RELEASE-*]
# TODO: Manual trigger
env:
  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version"

jobs:
  release:
    if: github.event.review.state == 'APPROVED'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      branch_name: ${{ steps.branch-names.outputs.RELEASE_BRANCH_NAME }}
    steps:
      - name: "Setup java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          server-id: ossrh
          server-username: MAVEN_CENTRAL_USER # env variable for username in deploy
          server-password: MAVEN_CENTRAL_PASSWORD # env variable for token in deploy

      - name: "Get PR branch names"
        id: branch-names
        run: |
          RELEASE_BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo Release Branch Name "$RELEASE_BRANCH_NAME"
          echo "RELEASE_BRANCH_NAME=$RELEASE_BRANCH_NAME" >> $GITHUB_OUTPUT

          VERSION=$(echo "$RELEASE_BRANCH_NAME" | cut -d'-' -f2)
          echo Version "$VERSION"

          JAVADOC_BRANCH_NAME=release-docs9-$VERSION
          echo Javadoc Branch Name "$JAVADOC_BRANCH_NAME"
          echo "JAVADOC_BRANCH_NAME=$JAVADOC_BRANCH_NAME" >> $GITHUB_OUTPUT

          RELEASE_NOTES_BRANCH_NAME=release-notes9-$VERSION
          echo Release Notes Branch Name "$RELEASE_NOTES_BRANCH_NAME"
          echo "RELEASE_NOTES_BRANCH_NAME=$RELEASE_NOTES_BRANCH_NAME" >> $GITHUB_OUTPUT

          GIT_TAG=rel/$VERSION
          echo Git Tag "$GIT_TAG"
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_OUTPUT

      - name: "Download Release Asset"
        id: download-asset
        # TODO: replace the fork repo with the code repo
        run: |
          gh release download ${{ steps.branch-names.outputs.GIT_TAG }} --dir ./ --repo "Johannes-Schneider/cloud-sdk-java"
          unzip sap-cloud-sdk-java-*.zip -d .
          unzip sap-cloud-sdk-aggregated-javadoc-*.zip -d .
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Import GPG Key"
        run: |
          echo "${{ secrets.PGP_PRIVATE_KEY }}" | gpg --batch --passphrase "$PASSPHRASE" --import
        env:
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: "Perform Release"
        working-directory: ./release
        run: >
          echo "Hello"
#          mvn
#          $MVN_CLI_ARGS
#          -DrepositoryId=local
#          -Durl=file:./temp_local_repo
#          -Dmaven.install.skip=true
#          -Dgpg.passphrase="$GPG_PASSPHRASE"
#          -Dgpg.keyname="$MAVEN_CENTRAL_USER"
#          deploy
#
#          mvn
#          $MVN_CLI_ARGS
#          org.sonatype.plugins:nexus-staging-maven-plugin:1.6.13:deploy-staged-repository
#          -DserverId=ossrh
#          -DnexusUrl=https://oss.sonatype.org
#          -DrepositoryDirectory=./temp_local_repo
#          -DstagingProfileId=$MAVEN_CENTRAL_PROFILE_ID
#          -DautoReleaseAfterClose=true

        env:
          MAVEN_CENTRAL_USER: ${{ secrets.MAVEN_CENTRAL_USER }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_CENTRAL_PROFILE_ID: ${{ secrets.MAVEN_CENTRAL_PROFILE_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: "Merge Release PR if Approved"
        run: gh pr merge --squash "${{ steps.branch-names.outputs.RELEASE_BRANCH_NAME }}" --repo "SAP/cloud-sdk-java"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: "Merge Javadoc PR if Approved"
        run: gh pr merge --squash "${{ steps.branch-names.outputs.JAVADOC_BRANCH_NAME }}" --repo "SAP/cloud-sdk"
        env:
          GH_TOKEN: ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }}

      - name: "Merge Release Notes PR if Approved"
        run: gh pr merge --squash "${{ steps.branch-names.outputs.RELEASE_NOTES_BRANCH_NAME }}" --repo "SAP/cloud-sdk"
        env:
          GH_TOKEN: ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }}

      - name: "Publish the Draft Release"
        run: gh release edit "$GIT_TAG" --repo "SAP/cloud-sdk-java"

  notify-job:
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ failure() }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Notify"
        run: python .pipeline/scripts/notify.py
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          WORKFLOW: ${{ github.workflow }}
          WORKFLOW_RUN_URL: https://github.com/SAP/cloud-sdk-java/actions/runs/${{ github.run_id }}
          BRANCH_NAME: ${{ needs.release.outputs.branch_name }}

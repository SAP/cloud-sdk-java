name: Perform Release

on:
  release:
    types: [published]

#  # Uncomment the following lines to enable manual workflow trigger
#  # Make sure to swap out the two places referencing GIT_TAG in the steps below
#  workflow_dispatch:
#    inputs:
#      release_version:
#        description: "Release version, leave empty for default value based on current snapshot"
#        required: false

env:
  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      branch_name: ${{ steps.download-asset.outputs.BRANCH_NAME }}
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          server-id: artifactory-snapshots
          server-username: ARTIFACTORY_USER # env variable for username in deploy
          server-password: ARTIFACTORY_TOKEN # env variable for token in deploy

      - name: Download Release Asset
        id: download-asset
        run: |
          GIT_TAG=${{ github.event.release.tag_name }}
          # When enabling the manual workflow trigger, use the next line instead of the previous one
          # GIT_TAG=rel/${{ github.event.inputs.release_version }}
          echo Git Tag "$GIT_TAG"

          BRANCH_NAME=`python -c "print('RELEASE-' + '$GIT_TAG'.replace('rel/', ''))"`
          echo Branch Name "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT

          gh release download "$GIT_TAG" --dir ./ --repo "SAP/cloud-sdk-java"
          unzip sap-cloud-sdk-java-*.zip -d .
          unzip sap-cloud-sdk-aggregated-javadoc-*.zip -d .
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Perform Release
        working-directory: ./release
        run: >
          mvn
          $MVN_CLI_ARGS
          -Durl=https://common.repositories.cloud.sap/artifactory/build-snapshots-cloudsdk
          -DrepositoryId=artifactory-snapshots
          -Dmaven.install.skip=true
          deploy

        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Get SDK Major Version
        run: |
          echo "VERSION=$(echo $GIT_TAG | awk -F'/' '{print $2}')" >> $GITHUB_ENV
          echo "MAJOR_VERSION=$(echo $GIT_TAG | awk -F'/' '{print $2}' | awk -F'.' '{print $1}')" >> $GITHUB_ENV
        env:
          GIT_TAG: ${{ github.event.release.tag_name }}
          # When enabling the manual workflow trigger, use the next line instead of the previous one
          # GIT_TAG: rel/${{ github.event.inputs.release_version }}

      - name: Checkout SAP/cloud-sdk
        uses: actions/checkout@v3
        with:
          repository: SAP/cloud-sdk
          path: cloud-sdk
          token: ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }}

      - name: Prepare git
        working-directory: ./cloud-sdk
        run: |
          git config --global user.email "cloudsdk@sap.com"
          git config --global user.name "SAP Cloud SDK Bot"

      - name: Replace JavaDoc in new Branch
        working-directory: ./cloud-sdk
        env:
          MAJOR_VERSION: ${{ env.MAJOR_VERSION }}
          VERSION: ${{ env.VERSION }}
        run: |
          TARGET_DIR=static/java-api/v$MAJOR_VERSION
          rm -rf $TARGET_DIR
          mkdir -p $TARGET_DIR
          mv ../sap-cloud-sdk-aggregated-javadoc/* $TARGET_DIR

          git add -A $TARGET_DIR

          CHANGED_FILES="$(git status -s)"
          if [ -z "$CHANGED_FILES" ]; then
              echo "No changes to API docs detected, skipping Pull Request creation."
              echo "CREATE_PR=false" >> $GITHUB_ENV
              exit 0
          fi

          echo "CREATE_PR=true" >> $GITHUB_ENV

          CLOUD_SDK_BRANCH_NAME=update-java-api-docs-v$VERSION
          echo "CLOUD_SDK_BRANCH_NAME=$CLOUD_SDK_BRANCH_NAME" >> $GITHUB_ENV

          git switch --create $CLOUD_SDK_BRANCH_NAME

          git commit -m "Update SAP Cloud SDK for Java API docs for v$MAJOR_VERSION"

          git push origin $CLOUD_SDK_BRANCH_NAME:$CLOUD_SDK_BRANCH_NAME

      - name: Create JavaDoc PR
        if: ${{ env.CREATE_PR == 'true' }}
        working-directory: ./cloud-sdk
        run: |
          PR_TITLE="Update SAP Cloud SDK for Java API docs for v$MAJOR_VERSION"
          PR_BODY="Replace the contents of v$MAJOR_VERSION API docs with the latest release of the SDK."

          gh pr create --title "$PR_TITLE" --body "$PR_BODY" --repo "SAP/cloud-sdk"
        env:
          MAJOR_VERSION: ${{ env.MAJOR_VERSION }}
          VERSION: ${{ env.VERSION }}
          GH_TOKEN: ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }}

      - name: Merge Release Branch
        run: gh pr merge --squash "${{ steps.download-asset.outputs.BRANCH_NAME }}" --repo "SAP/cloud-sdk-java"
        env:
          GH_TOKEN: ${{ github.token }}

  notify-job:
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ failure() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify
        run: python .pipeline/scripts/notify.py
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          WORKFLOW: ${{ github.workflow }}
          WORKFLOW_RUN_URL: https://github.com/SAP/cloud-sdk-java/actions/runs/${{ github.run_id }}
          BRANCH_NAME: ${{ needs.release.outputs.branch_name }}

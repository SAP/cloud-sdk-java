name: Deploy Snapshot to Maven Central

on:
  workflow_dispatch:
    inputs:
      skip_blackduck_scan:
        description: "Skip Blackduck Scan"
        type: boolean
        default: false
        required: false

env:
  CI_BUILD_WORKFLOW: "continuous-integration.yaml" # Name of the workflow that should be triggered for CI builds
  RELEASE_ARTIFACT_NAME: "release-artifacts" # Name of the artifact that should be downloaded from the CI build workflow

  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version"

jobs:
  run-ci:
    name: "Continuous Integration"
    runs-on: ubuntu-latest
    outputs:
      ci-run-id: ${{ steps.trigger-ci.outputs.run-id }}
    permissions:
      actions: write # needed to trigger the ci-build workflow
      statuses: write # needed to update the commit status
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
      - name: "Get Commit SHA"
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: "Get Branch Name"
        run: echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: "Trigger CI Workflow"
        id: trigger-ci
        uses: ./.github/actions/trigger-workflow
        with:
          workflow: ${{ env.CI_BUILD_WORKFLOW }}
          workflow-ref: ${{ env.BRANCH_NAME }}
          commit-sha: ${{ env.COMMIT_SHA }}
          parameters: >
            -f commit=${{ env.COMMIT_SHA }}
            -f build-release-artifacts=true
            -f run-blackduck-scan=${{ !github.event.inputs.skip_blackduck_scan }}

      - name: "Await CI Workflow"
        uses: ./.github/actions/await-workflow
        with:
          run-id: ${{ steps.trigger-ci.outputs.run-id }}
          commit-status: "Continuous Integration Workflow"

  deploy-snapshot:
    name: Deploy Snapshot
    needs: [ run-ci ]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read # needed to download the artifacts from the ci-build workflow
    steps:
      - name: "Setup Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          server-id: artifactory-snapshots
          server-username: MAVEN_CENTRAL_USER # env variable for username in deploy
          server-password: MAVEN_CENTRAL_PASSWORD # env variable for token in deploy

      - name: "Download Release Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
          github-token: ${{ github.token }}
          run-id: ${{ needs.run-ci.outputs.ci-run-id }}

      - name: "Publish Snapshot"
        run: >
          mvn
          $MVN_CLI_ARGS
          -Durl=https://oss.sonatype.org/content/repositories/snapshots
          -DrepositoryId=artifactory-snapshots
          -Dmaven.install.skip=true
          -Dmaven.test.skip
          -Dmaven.compiler.showCompilationChanges
          -Dhttp.keepAlive=false
          deploy
        env:
          MAVEN_CENTRAL_USER: ${{ secrets.MAVEN_CENTRAL_USER }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

  notify-job:
    runs-on: ubuntu-latest
    needs: [ run-ci, deploy-snapshot ]
    if: ${{ failure() && github.ref == 'refs/heads/main' }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Notify"
        run: python .pipeline/scripts/notify.py
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          WORKFLOW: ${{ github.workflow }}
          WORKFLOW_RUN_URL: https://github.com/SAP/cloud-sdk-java/actions/runs/${{ github.run_id }}
          BRANCH_NAME: ${{ github.ref_name }}

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.color=false"
  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version"

jobs:
  ### Verify formatting ###
  # this is done first because it is fast and we don't want to waste time on the other, more expensive steps
  formatting:
    runs-on: ubuntu-latest
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    strategy:
      matrix:
        task:
          - { "name": "Code Formatting", "command": "net.revelc.code.formatter:formatter-maven-plugin:validate" }
          - { "name": "Import Sorting", "command": "net.revelc.code:impsort-maven-plugin:check" }
          - { "name": "POM File Sorting", "command": "com.github.ekryd.sortpom:sortpom-maven-plugin:verify" }
          # Checkstyle is currently lacking the required file, so disable it for now
          # - { "name": "Checkstyle", "command": "org.apache.maven.plugins:maven-checkstyle-plugin:checkstyle" }
    name: ${{ matrix.task.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        with:
          path: ~/.m2/repository
          key: maven
      - name: ${{ matrix.task.name }}
        run: |
          mvn $MVN_CLI_ARGS ${{ matrix.task.command }}
      - name: Checkstyle Results
        if: ${{ contains(matrix.tool.name, 'Checkstyle') }}
        run: |
          python .pipeline/scripts/print-checkstyle.py

  build:
    runs-on: ubuntu-latest
    needs: formatting
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven
      - name: Compile
        # we need to use install here because otherwise the code checks below don't work
        # they require the JARs of all modules to work, so those need to be installed
        run: |
          mvn $MVN_CLI_ARGS install -DskipTests -DskipFormatting
      - name: Local Changes Check
        run: |
          CHANGED_FILES="$(git --no-pager diff --name-only)"
          if [ ! -z "$CHANGED_FILES" ]; then
              echo "There are local changes in the following files:"
              echo "$CHANGED_FILES"
              echo "Printing the git diff:"
              git --no-pager diff
              exit 1
          fi

      # M2
      - name: ZIP M2 SDK Directory
        run: |
          cd $HOME/.m2/repository/com/sap/cloud/sdk
          zip -r m2-sdk.zip .
      - name: Upload M2 SDK Directory
        uses: actions/upload-artifact@v3
        with:
          name: m2-sdk
          path: ~/.m2/repository/com/sap/cloud/sdk/m2-sdk.zip
          retention-days: 1
      - name: Purge SDK Artifacts from Maven Repository
        run: |
          rm -rf $HOME/.m2/repository/com/sap/cloud/sdk/
        continue-on-error: true
      - name: Save Maven Repository
        uses: actions/cache/save@v3
        if: steps.restore-cache.outputs.cache-hit != 'true'
        id: save-cache
        with:
          path: ~/.m2/repository
          key: maven
      # Target
      - name: ZIP Target Dirs
        run: |
          zip -r target.zip $(find . -path './**/target/**/*')
      - name: Upload Target Dirs
        uses: actions/upload-artifact@v3
        with:
          name: target-dirs
          path: target.zip
          retention-days: 1


  test:
    needs: build
    runs-on: ubuntu-latest
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    name: Test
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven

      # M2
      - name: Download M2 SDK Directory
        uses: actions/download-artifact@v3
        with:
          name: m2-sdk
          path: .
      - name: UNZIP M2 SDK Directory
        run: |
          unzip m2-sdk.zip -d ~/.m2/repository/com/sap/cloud/sdk

      # Target
      - name: Download Target Dirs
        uses: actions/download-artifact@v3
        with:
          name: target-dirs
          path: .
      - name: UNZIP Target Dirs
        run: |
          unzip -D target.zip
      - name: Test
        run: |
          mvn $MVN_CLI_ARGS jacoco:prepare-agent surefire:test jacoco:report
      - name: Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: "**/jacoco.csv"
      - name: Test Coverage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

  pmd:
    needs: build
    runs-on: ubuntu-latest
    name: PMD
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      # M2
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven
      - name: Download M2 SDK Directory
        uses: actions/download-artifact@v3
        with:
          name: m2-sdk
          path: .
      - name: UNZIP M2 SDK Directory
        run: |
          unzip m2-sdk.zip -d ~/.m2/repository/com/sap/cloud/sdk

      # Target
      - name: Download Target Dirs
        uses: actions/download-artifact@v3
        with:
          name: target-dirs
          path: .
      - name: UNZIP Target Dirs
        run: |
          unzip -D target.zip
      - name: PMD
        run: |
          mvn $MVN_CLI_ARGS org.apache.maven.plugins:maven-pmd-plugin:pmd
      - name: PMD Report
        run: |
          python .pipeline/scripts/print-pmd.py

  spotbugs:
    needs: build
    runs-on: ubuntu-latest
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    name: Spotbugs
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      # M2
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven
      - name: Download M2 SDK Directory
        uses: actions/download-artifact@v3
        with:
          name: m2-sdk
          path: .
      - name: UNZIP M2 SDK Directory
        run: |
          unzip m2-sdk.zip -d ~/.m2/repository/com/sap/cloud/sdk

      # Target
      - name: Download Target Dirs
        uses: actions/download-artifact@v3
        with:
          name: target-dirs
          path: .
      - name: UNZIP Target Dirs
        run: |
          unzip -D target.zip
      - name: Spotbugs
        run: |
          mvn $MVN_CLI_ARGS com.github.spotbugs:spotbugs-maven-plugin:spotbugs
      - name: Spotbugs Report
        run: |
          python .pipeline/scripts/print-spotbugs.py

  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'java'
          queries: security-extended

      # M2
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:java"
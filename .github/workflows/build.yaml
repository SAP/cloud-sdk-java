name: CI

on:
  push:
    branches: ["main", "poc_pipeline"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.color=false"
  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version"

jobs:
  formatting:
    runs-on: ubuntu-latest
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    name: Formatting
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          - path: $HOME/.m2/repository
            key: maven
      ### Verify formatting ###
      # this is done here because it is fast and we don't want to waste time on the other, more expensive steps
      - name: Check Formatting
        run: "mvn $MVN_CLI_ARGS net.revelc.code.formatter:formatter-maven-plugin:validate"
      - name: Check Import Sorting
        run: "mvn $MVN_CLI_ARGS net.revelc.code:impsort-maven-plugin:check"
      - name: Check POM File Sorting
        run: "mvn $MVN_CLI_ARGS com.github.ekryd.sortpom:sortpom-maven-plugin:verify"
      # Check style is currently lacking the required file, so disable it for now
      # - name: Check Code Style
      #   run: |
      #     mvn $MVN_CLI_ARGS org.apache.maven.plugins:maven-checkstyle-plugin:checkstyle
      #     python .pipeline/scripts/print-checkstyle.py

  build:
    runs-on: ubuntu-latest
    needs: formatting
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    name: Build, Test & Q/A
    env:
      CHANGED_FILES: ""
    steps:
      - uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          - path: $HOME/.m2/repository
            key: maven
      # print maven repo cache here for debugging
      - name: Show Maven Repository
        run: |
          ls -R $HOME/.m2/repository/com/sap/cloud/sdk/
          ls -R $HOME/.m2/repository/com/google/guava/guava
        continue-on-error: true
      - name: Compile
        # we need to use install here because otherwise the code checks below don't work
        # they require the JARs of all modules to work, so those need to be installed
        run: |
          mvn $MVN_CLI_ARGS install -DskipTests -Dskip-formatting
      - name: Local Changes Check
        run: |
          CHANGED_FILES="$(git status --porcelain | rev | cut -f1 -d " " | rev)"
          if [ ! -z $CHANGED_FILES ]; then
              echo "There are local changes in the following files:"
              echo $CHANGED_FILES
              echo "Printing the git diff:"
              git --no-pager diff
              exit 1
          fi
      # run code checks that require the result of "install" above
      - name: Spotbugs
        run: |
          mvn $MVN_CLI_ARGS com.github.spotbugs:spotbugs-maven-plugin:spotbugs
          python .pipeline/scripts/print-spotbugs.py
      - name: PMD
        run: |
          mvn $MVN_CLI_ARGS org.apache.maven.plugins:maven-pmd-plugin:pmd
          python .pipeline/scripts/print-pmd.py
      - name: Test
        run: "mvn $MVN_CLI_ARGS test jacoco:report"
      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: "**/jacoco.csv"
      - name: Test Coverage Percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Purge Maven Repository from SDK Artifacts
        run: |
          rm -rf $HOME/.m2/repository/com/sap/cloud/sdk/
      # print maven repo cache here for debugging
      - name: Show Maven repository contents
        run: |
          ls -R $HOME/.m2/repository/com/sap/cloud/sdk/
          ls -R $HOME/.m2/repository/com/google/guava/guava
        continue-on-error: true
      - name: Save Maven Repository
        uses: actions/cache/save@v3
        if: steps.restore-cache.outputs.cache-hit != 'true'
        id: save-cache
        with:
          - path: $HOME/.m2/repository
            key: maven


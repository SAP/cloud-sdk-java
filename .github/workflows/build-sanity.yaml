name: Daily Verification

on:
  workflow_dispatch:
  schedule:
    - cron: 0 12 * * 1,2,3,4,5

env:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.color=false"
  MVN_CLI_ARGS: "--batch-mode --no-transfer-progress --fail-at-end --show-version"
  MVN_SKIP_ARGS: "-DskipFormatting -Denforcer.skip -Djacoco.skip -Dmdep.analyze.skip"

jobs:
  build:
    runs-on: ubuntu-latest
    # Permissions block is optional, useful for dependabot checks
    permissions:
      checks: write
      contents: read
    name: Install
    outputs:
      version: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Determine Version
        run: echo "VERSION=$(cat latest.json | jq -r .version)" >> $GITHUB_OUTPUT
        id: get-version
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Install and package
        run: |
          mvn $MVN_CLI_ARGS install org.jacoco:jacoco-maven-plugin:report
          python .pipeline/scripts/generate-release-artifacts.py --version ${{ steps.get-version.outputs.VERSION }} --path-prefix release
          zip -q -r sap-cloud-sdk-java-${{ steps.get-version.outputs.VERSION }}.zip release
      - name: Local Changes Check
        run: |
          CHANGED_FILES="$(git --no-pager diff --name-only)"
          if [ ! -z "$CHANGED_FILES" ]; then
              echo "There are local changes in the following files:"
              echo "$CHANGED_FILES"
              echo "Printing the git diff:"
              git --no-pager diff
              exit 1
          fi
      - name: Upload release package
        uses: actions/upload-artifact@v3
        with:
          name: cloud-sdk-package
          path: sap-cloud-sdk-java-${{ steps.get-version.outputs.VERSION }}.zip
          retention-days: 1

      - name: Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
      - name: Coverage Report
        run: |
          python .pipeline/scripts/print-coverage.py --jacoco-report-pattern '**/target/site/jacoco/jacoco.csv'
      - name: PMD
        run: |
          mvn $MVN_CLI_ARGS org.apache.maven.plugins:maven-pmd-plugin:pmd
          python .pipeline/scripts/print-pmd.py
      - name: Spotbugs
        run: |
          mvn $MVN_CLI_ARGS com.github.spotbugs:spotbugs-maven-plugin:spotbugs
          python .pipeline/scripts/print-spotbugs.py
      - name: Checkstyle
        run: |
          mvn $MVN_CLI_ARGS $MVN_SKIP_ARGS -P!build-test-modules org.apache.maven.plugins:maven-checkstyle-plugin:checkstyle
          python .pipeline/scripts/print-checkstyle.py

  archetypes:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      checks: write
      contents: read
    strategy:
      matrix:
        task:
          - {
              "archetype": "spring-boot3",
              "javaVersion": 17,
              "startCommand": "mvn spring-boot:run -B",
            }
    name: ${{ matrix.task.archetype }}
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ matrix.task.javaVersion }}
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven-central

      - name: Download Release ZIP
        uses: actions/download-artifact@v3
        with:
          name: cloud-sdk-package
          path: .
      - name: Install Release Artifacts
        run: |
          unzip sap-cloud-sdk-java-${{ needs.build.outputs.version }}.zip -d .
          cd release
          mvn $MVN_CLI_ARGS install
          mvn $MVN_CLI_ARGS archetype:crawl
          cd ..
          rm -rf release

      - name: Generate ${{ matrix.task.archetype }}
        run: >
          mvn archetype:generate -B
          -DarchetypeCatalog=local
          -DarchetypeGroupId=com.sap.cloud.sdk.archetypes
          -DarchetypeArtifactId=${{ matrix.task.archetype }}
          -DarchetypeVersion=${{ needs.build.outputs.version }}
          -DgroupId=com.sap.test
          -DartifactId=example-${{ matrix.task.archetype }}
          -Dversion=1.0-SNAPSHOT
          -Dpackage=com.sap.test
          -Dhttp.keepAlive=false

      - name: Verify ${{ matrix.task.archetype }}
        working-directory: ./example-${{ matrix.task.archetype }}
        run: >
          mvn clean verify -B
          -Dhttp.keepAlive=false
          -Dmaven.test.skip=true
      - name: Test ${{ matrix.task.name }}
        working-directory: ./example-${{ matrix.task.archetype }}
        run: mvn test -B -Dsurefire.logLevel='error'
      - name: Spotbugs ${{ matrix.task.archetype }}
        working-directory: ./example-${{ matrix.task.archetype }}
        run: >
          mvn com.github.spotbugs:spotbugs-maven-plugin:check -B
          -pl !integration-tests
          -Dhttp.keepAlive=false
          -Dmaven.wagon.http.pool=false

      - name: Start ${{ matrix.task.archetype }}
        working-directory: ./example-${{ matrix.task.archetype }}/application
        run: |
          logFilePath=log.txt
          ${{ matrix.task.startCommand }} > $logFilePath 2>&1 &

          if ! curl -s --retry 60 --retry-delay 3 --retry-all-errors http://127.0.0.1:8080/hello ; then
            echo "Project generated from archetype ${{ matrix.task.archetype }} failed to start locally."
            cat $logFilePath
            exit 1
          fi

          if ! grep -q "I am running!" $logFilePath; then
            echo "Project generated from archetype ${{ matrix.task.archetype }} started locally, but did not contain the expected log output."
            cat $logFilePath
            exit 1
          fi

          if grep -iq "caused by" $logFilePath; then
            echo "Project generated from archetype ${{ matrix.task.archetype }} started locally, but an unexpected error occurred."
            cat $logFilePath
            exit 1
          fi

      - name: Verify .gitignore ${{ matrix.task.archetype }}
        working-directory: ./example-${{ matrix.task.archetype }}
        run: |
          if [ ! -f .gitignore ]; then
              ls -lah
              echo "Project generated from archetype does not contain a .gitignore file."
              exit 1
          fi

      - name: Purge SDK Artifacts from Maven Repository
        run: |
          rm -rf $HOME/.m2/repository/com/sap/cloud/sdk/
          rm -rf $HOME/.m2/repository/archetype-catalog.xml
      - name: Save Maven Repository
        uses: actions/cache/save@v3
        if: steps.restore-cache.outputs.cache-hit != 'true'
        id: save-cache
        with:
          path: ~/.m2/repository
          key: maven-central

  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Force Java 17
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: "java"
          queries: security-extended

      # M2
      - name: Load Maven Repository
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: ~/.m2/repository
          key: maven

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:java"

  notify-job:
    runs-on: ubuntu-latest
    needs: [build, archetypes, codeql]
    if: ${{ failure() && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify
        run: python .pipeline/scripts/notify.py
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          WORKFLOW: ${{ github.workflow }}
          WORKFLOW_RUN_URL: https://github.com/SAP/cloud-sdk-java/actions/runs/${{ github.run_id }}
          BRANCH_NAME: ${{ github.ref_name }}
